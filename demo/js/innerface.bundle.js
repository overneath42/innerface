/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("module.exports = _;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJfXCI/YjNiOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiX1wiXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The prototype object for `Controller`.\r\n *\r\n * @author Justin Toon\r\n * @license MIT\r\n *\r\n * @requires NPM:lodash\r\n * @requires '../if.const.js:selectors\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar if_const_1 = __webpack_require__(2);\r\n/**\r\n * A generic prototype for creating a function\r\n * which will execute scripting.\r\n *\r\n * @since 0.1.0\r\n */\r\nvar Controller = (function () {\r\n    function Controller(props) {\r\n        this.name = props.name;\r\n        this.targets = props.targets;\r\n        this.events = props.events;\r\n        this.methods = props.methods || {};\r\n    }\r\n    /**\r\n     * Initialize an individual Controller.\r\n     */\r\n    Controller.prototype.initialize = function () {\r\n        Controller.initEventListeners(this.events);\r\n    };\r\n    /**\r\n     * Convert a named list of selector strings into NodeLists.\r\n     *\r\n     * @static\r\n     * @param {string} name The lookup name to query for selectors.\r\n     * @param {(string | ConfigObject)} [targets] Predefined targets.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    Controller.getTargets = function (name, targets) {\r\n        var selectedElements = {};\r\n        if (!targets) {\r\n            targets = if_const_1.SELECTORS[name];\r\n        }\r\n        if (targets) {\r\n            _.forEach(targets, function (target, key) {\r\n                selectedElements[key] = document.querySelectorAll(target);\r\n            });\r\n        }\r\n        return selectedElements;\r\n    };\r\n    /**\r\n     * Initialize a set of functions to create event listeners.\r\n     *\r\n     * @static\r\n     * @param {Object} events An object of functions which will add event listeners when called.\r\n     */\r\n    Controller.initEventListeners = function (events) {\r\n        Object.keys(events).forEach(function (key) {\r\n            try {\r\n                // attempt to initialize the event\r\n                events[key]();\r\n            }\r\n            catch (error) {\r\n                // if it fails, log the event and continue\r\n                console.debug(error);\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    return Controller;\r\n}());\r\nexports.default = Controller;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2lmLmNvbnRyb2xsZXIudHM/OWEzMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7O0dBUUc7O0FBRUgsK0JBQTRCO0FBQzVCLHdDQUF3QztBQUV4Qzs7Ozs7R0FLRztBQUNIO0lBTUUsb0JBQVksS0FBNEI7UUFDdEMsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUM3QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQ7O09BRUc7SUFDSSwrQkFBVSxHQUFqQjtRQUNFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ1cscUJBQVUsR0FBeEIsVUFBeUIsSUFBWSxFQUFFLE9BQStCO1FBQ3BFLElBQUksZ0JBQWdCLEdBQW1CLEVBQUUsQ0FBQztRQUUxQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDYixPQUFPLEdBQUcsb0JBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNaLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLFVBQUMsTUFBYyxFQUFFLEdBQVc7Z0JBQzdDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM1RCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxNQUFNLENBQUMsZ0JBQWdCLENBQUM7SUFDMUIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ1ksNkJBQWtCLEdBQWpDLFVBQWtDLE1BQW9CO1FBQ3BELE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQUc7WUFDN0IsSUFBSSxDQUFDO2dCQUNILGtDQUFrQztnQkFDbEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDaEIsQ0FBQztZQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ2YsMENBQTBDO2dCQUMxQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQixNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILGlCQUFDO0FBQUQsQ0FBQyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBUaGUgcHJvdG90eXBlIG9iamVjdCBmb3IgYENvbnRyb2xsZXJgLlxuICpcbiAqIEBhdXRob3IgSnVzdGluIFRvb25cbiAqIEBsaWNlbnNlIE1JVFxuICpcbiAqIEByZXF1aXJlcyBOUE06bG9kYXNoXG4gKiBAcmVxdWlyZXMgJy4uL2lmLmNvbnN0LmpzOnNlbGVjdG9yc1xuICovXG5cbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFNFTEVDVE9SUyB9IGZyb20gJy4uL2lmLmNvbnN0JztcblxuLyoqXG4gKiBBIGdlbmVyaWMgcHJvdG90eXBlIGZvciBjcmVhdGluZyBhIGZ1bmN0aW9uXG4gKiB3aGljaCB3aWxsIGV4ZWN1dGUgc2NyaXB0aW5nLlxuICpcbiAqIEBzaW5jZSAwLjEuMFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250cm9sbGVyIGltcGxlbWVudHMgSW5uZXJmYWNlLklDb250cm9sbGVyIHtcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIHRhcmdldHM6IE5vZGVMaXN0T2JqZWN0O1xuICBwdWJsaWMgZXZlbnRzOiBNZXRob2RPYmplY3Q7XG4gIHB1YmxpYyBtZXRob2RzOiBNZXRob2RPYmplY3Q7XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IElubmVyZmFjZS5JQ29udHJvbGxlcikge1xuICAgIHRoaXMubmFtZSA9IHByb3BzLm5hbWU7XG4gICAgdGhpcy50YXJnZXRzID0gcHJvcHMudGFyZ2V0cztcbiAgICB0aGlzLmV2ZW50cyA9IHByb3BzLmV2ZW50cztcbiAgICB0aGlzLm1ldGhvZHMgPSBwcm9wcy5tZXRob2RzIHx8IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgYW4gaW5kaXZpZHVhbCBDb250cm9sbGVyLlxuICAgKi9cbiAgcHVibGljIGluaXRpYWxpemUoKSB7XG4gICAgQ29udHJvbGxlci5pbml0RXZlbnRMaXN0ZW5lcnModGhpcy5ldmVudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnQgYSBuYW1lZCBsaXN0IG9mIHNlbGVjdG9yIHN0cmluZ3MgaW50byBOb2RlTGlzdHMuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgVGhlIGxvb2t1cCBuYW1lIHRvIHF1ZXJ5IGZvciBzZWxlY3RvcnMuXG4gICAqIEBwYXJhbSB7KHN0cmluZyB8IENvbmZpZ09iamVjdCl9IFt0YXJnZXRzXSBQcmVkZWZpbmVkIHRhcmdldHMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGdldFRhcmdldHMobmFtZTogc3RyaW5nLCB0YXJnZXRzPzogc3RyaW5nIHwgQ29uZmlnT2JqZWN0KTogTm9kZUxpc3RPYmplY3Qge1xuICAgIGxldCBzZWxlY3RlZEVsZW1lbnRzOiBOb2RlTGlzdE9iamVjdCA9IHt9O1xuXG4gICAgaWYgKCF0YXJnZXRzKSB7XG4gICAgICB0YXJnZXRzID0gU0VMRUNUT1JTW25hbWVdO1xuICAgIH1cblxuICAgIGlmICh0YXJnZXRzKSB7XG4gICAgICBfLmZvckVhY2godGFyZ2V0cywgKHRhcmdldDogc3RyaW5nLCBrZXk6IHN0cmluZykgPT4ge1xuICAgICAgICBzZWxlY3RlZEVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRhcmdldCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZWN0ZWRFbGVtZW50cztcbiAgfVxuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplIGEgc2V0IG9mIGZ1bmN0aW9ucyB0byBjcmVhdGUgZXZlbnQgbGlzdGVuZXJzLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudHMgQW4gb2JqZWN0IG9mIGZ1bmN0aW9ucyB3aGljaCB3aWxsIGFkZCBldmVudCBsaXN0ZW5lcnMgd2hlbiBjYWxsZWQuXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBpbml0RXZlbnRMaXN0ZW5lcnMoZXZlbnRzOiBNZXRob2RPYmplY3QpIHtcbiAgICBPYmplY3Qua2V5cyhldmVudHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIGF0dGVtcHQgdG8gaW5pdGlhbGl6ZSB0aGUgZXZlbnRcbiAgICAgICAgZXZlbnRzW2tleV0oKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIGlmIGl0IGZhaWxzLCBsb2cgdGhlIGV2ZW50IGFuZCBjb250aW51ZVxuICAgICAgICBjb25zb2xlLmRlYnVnKGVycm9yKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29uZmlnL2lmLmNvbnRyb2xsZXIudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Key-ordered selector strings of important DOM elements.\r\n  *\r\n  * @constant\r\n  * @type {object}\r\n  */\r\nexports.SELECTORS = {\r\n    disable: {\r\n        target: '[data-if-disable]',\r\n        condition: '[data-if-disable-condition]'\r\n    },\r\n    setAttr: {\r\n        target: '[data-if-set-attr]'\r\n    },\r\n    setContent: {\r\n        target: '[data-if-set-content]'\r\n    },\r\n    validateInput: {\r\n        target: '[data-if-validate-input]'\r\n    },\r\n    validateForm: {\r\n        form: '[data-if-validate-form]',\r\n        fields: '[data-if-validate-form] :input:not([data-ui-validate-form-status])',\r\n        status: '[data-if-validate-form-status]'\r\n    }\r\n};\r\n/**\r\n * A manifest of global states, translated to markup classes.\r\n *\r\n * @constant\r\n * @type {object}\r\n * @export\r\n */\r\nexports.STATES = {\r\n    isActive: 'is-active',\r\n    isVisible: 'is-visible',\r\n    isEditable: 'is-editable',\r\n    isBeingEdited: 'is-being-edited',\r\n    isHidden: 'is-hidden',\r\n    isDisabled: 'is-disabled',\r\n    isHovered: 'is-hovered'\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaWYuY29uc3QudHM/ZTNlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7OztJQUtJO0FBQ1MsaUJBQVMsR0FBaUI7SUFDckMsT0FBTyxFQUFFO1FBQ1AsTUFBTSxFQUFFLG1CQUFtQjtRQUMzQixTQUFTLEVBQUUsNkJBQTZCO0tBQ3pDO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsTUFBTSxFQUFFLG9CQUFvQjtLQUM3QjtJQUNELFVBQVUsRUFBRTtRQUNWLE1BQU0sRUFBRSx1QkFBdUI7S0FDaEM7SUFDRCxhQUFhLEVBQUU7UUFDYixNQUFNLEVBQUUsMEJBQTBCO0tBQ25DO0lBQ0QsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixNQUFNLEVBQUUsb0VBQW9FO1FBQzVFLE1BQU0sRUFBRSxnQ0FBZ0M7S0FDekM7Q0FDRixDQUFDO0FBRUY7Ozs7OztHQU1HO0FBQ1UsY0FBTSxHQUE4QjtJQUMvQyxRQUFRLEVBQUUsV0FBVztJQUNyQixTQUFTLEVBQUUsWUFBWTtJQUN2QixVQUFVLEVBQUUsYUFBYTtJQUN6QixhQUFhLEVBQUUsaUJBQWlCO0lBQ2hDLFFBQVEsRUFBRSxXQUFXO0lBQ3JCLFVBQVUsRUFBRSxhQUFhO0lBQ3pCLFNBQVMsRUFBRSxZQUFZO0NBQ3hCLENBQUMiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogS2V5LW9yZGVyZWQgc2VsZWN0b3Igc3RyaW5ncyBvZiBpbXBvcnRhbnQgRE9NIGVsZW1lbnRzLlxuICAqXG4gICogQGNvbnN0YW50XG4gICogQHR5cGUge29iamVjdH1cbiAgKi9cbmV4cG9ydCBjb25zdCBTRUxFQ1RPUlM6IENvbmZpZ09iamVjdCA9IHtcbiAgZGlzYWJsZToge1xuICAgIHRhcmdldDogJ1tkYXRhLWlmLWRpc2FibGVdJyxcbiAgICBjb25kaXRpb246ICdbZGF0YS1pZi1kaXNhYmxlLWNvbmRpdGlvbl0nXG4gIH0sXG4gIHNldEF0dHI6IHtcbiAgICB0YXJnZXQ6ICdbZGF0YS1pZi1zZXQtYXR0cl0nXG4gIH0sXG4gIHNldENvbnRlbnQ6IHtcbiAgICB0YXJnZXQ6ICdbZGF0YS1pZi1zZXQtY29udGVudF0nXG4gIH0sXG4gIHZhbGlkYXRlSW5wdXQ6IHtcbiAgICB0YXJnZXQ6ICdbZGF0YS1pZi12YWxpZGF0ZS1pbnB1dF0nXG4gIH0sXG4gIHZhbGlkYXRlRm9ybToge1xuICAgIGZvcm06ICdbZGF0YS1pZi12YWxpZGF0ZS1mb3JtXScsXG4gICAgZmllbGRzOiAnW2RhdGEtaWYtdmFsaWRhdGUtZm9ybV0gOmlucHV0Om5vdChbZGF0YS11aS12YWxpZGF0ZS1mb3JtLXN0YXR1c10pJyxcbiAgICBzdGF0dXM6ICdbZGF0YS1pZi12YWxpZGF0ZS1mb3JtLXN0YXR1c10nXG4gIH1cbn07XG5cbi8qKlxuICogQSBtYW5pZmVzdCBvZiBnbG9iYWwgc3RhdGVzLCB0cmFuc2xhdGVkIHRvIG1hcmt1cCBjbGFzc2VzLlxuICpcbiAqIEBjb25zdGFudFxuICogQHR5cGUge29iamVjdH1cbiAqIEBleHBvcnRcbiAqL1xuZXhwb3J0IGNvbnN0IFNUQVRFUzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHtcbiAgaXNBY3RpdmU6ICdpcy1hY3RpdmUnLFxuICBpc1Zpc2libGU6ICdpcy12aXNpYmxlJyxcbiAgaXNFZGl0YWJsZTogJ2lzLWVkaXRhYmxlJyxcbiAgaXNCZWluZ0VkaXRlZDogJ2lzLWJlaW5nLWVkaXRlZCcsXG4gIGlzSGlkZGVuOiAnaXMtaGlkZGVuJyxcbiAgaXNEaXNhYmxlZDogJ2lzLWRpc2FibGVkJyxcbiAgaXNIb3ZlcmVkOiAnaXMtaG92ZXJlZCdcbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2lmLmNvbnN0LnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file Utility methods for the Innerface framework.\r\n *\r\n * @author Justin Toon\r\n * @version 0.1.0\r\n *\r\n * @requires NPM:lodash\r\n * @requires NPM:inflection\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar inflection = __webpack_require__(10);\r\n/**\r\n * Evaluates a string and breaks it into component parts,\r\n * identifying individual words and ignoring divider characters.\r\n *\r\n * @param {string} str The string to decode.\r\n *\r\n * @returns {array} An array of strings extracted from the original string.\r\n */\r\nfunction decodeString(name) {\r\n    var regex = /(\\w+)/g;\r\n    var params = [];\r\n    var match;\r\n    // loop through all RegEx matches and push results to an array\r\n    while ((match = regex.exec(name))) {\r\n        params.push(match[1]);\r\n    }\r\n    return params;\r\n}\r\nexports.decodeString = decodeString;\r\n/**\r\n * Determine if value is a number, or is a string which will parse as a number\r\n *\r\n * @param  {(string|number)} value The value to check.\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isNumber(value) {\r\n    return !isNaN(typeof value === 'number'\r\n        ? value\r\n        : parseInt(value, 10));\r\n    // NOTE: here is an alternate version to review more closely credit to\r\n    // `therealbenwiley` return (value && !isNaN(value)) || value === 0;\r\n}\r\nexports.isNumber = isNumber;\r\n/**\r\n * Recursively search all parentNodes of given Node until the requested\r\n * tag name is found, then returns the Node. Returns the original if\r\n * no parent is found.\r\n *\r\n * @param {HTMLElement} element The starting element.\r\n * @param {string} tag The tag name to locate.\r\n *\r\n * @returns {HTMLElement}\r\n */\r\nfunction findParentTag(node, tag) {\r\n    if (node.parentNode) {\r\n        while (node.parentNode) {\r\n            node = node.parentNode;\r\n            if (node.tagName && (node.tagName === tag.toLowerCase()))\r\n                return node;\r\n        }\r\n    }\r\n    // the requested tag is not a parent of the original Node\r\n    return undefined;\r\n}\r\nexports.findParentTag = findParentTag;\r\n/**\r\n * Generate a selector string to locate a hidden field for\r\n * a React component to access. Accepts an attribute value in camelCase\r\n * or snake-case and transforms appropriately. If the value starts with `^`,\r\n * the selector will be tailored to look for all elements with the given\r\n * data attribute and a value which starts with the provided selector string.\r\n *\r\n * @example\r\n * // returns '[data-react-output=\"testSelectorString\"]'\r\n * createDataFieldSelector('testSelectorString');\r\n *\r\n * @example\r\n * // returns '[data-ui-verify-target=\"testSelectorString\"]`\r\n * createDataFieldSelector('testSelectorString', 'dataUiVerifyTarget');\r\n *\r\n * @example\r\n * // returns '[data-ui-verify-target^=\"testSelectorString\"]`\r\n * createDataFieldSelector('^testSelectorString', 'dataUiVerifyTarget');\r\n *\r\n * @export\r\n * @param {string} selectorString  - The string to transform.\r\n * @param {string} dataAttr  - The data attribute to apply.\r\n *\r\n * @return {string} - The formatted selector string.\r\n */\r\nfunction createDataFieldSelector(selectorString, dataAttr) {\r\n    var operator = '=';\r\n    if (dataAttr.indexOf('-') === -1) {\r\n        dataAttr = inflection.transform(dataAttr, ['underscore', 'dasherize']);\r\n    }\r\n    if (_.startsWith(selectorString, '^')) {\r\n        operator = \"\" + selectorString.slice(0, 1) + operator;\r\n        selectorString = selectorString.slice(1);\r\n    }\r\n    return \"[\" + dataAttr + operator + \"\\\"\" + selectorString + \"\\\"]\";\r\n}\r\nexports.createDataFieldSelector = createDataFieldSelector;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaWYudXRpbHMudHM/ZTAwYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7O0dBUUc7O0FBRUgsK0JBQTRCO0FBQzVCLHlDQUF5QztBQUV6Qzs7Ozs7OztHQU9HO0FBQ0gsc0JBQTZCLElBQWE7SUFDeEMsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0lBQ3ZCLElBQUksTUFBTSxHQUFjLEVBQUUsQ0FBQztJQUMzQixJQUFJLEtBQUssQ0FBQztJQUVWLDhEQUE4RDtJQUM5RCxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQVhELG9DQVdDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsa0JBQXlCLEtBQXVCO0lBQzlDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRO1VBQ25DLEtBQUs7VUFDTCxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDekIsc0VBQXNFO0lBQ3RFLG9FQUFvRTtBQUN0RSxDQUFDO0FBTkQsNEJBTUM7QUFFRDs7Ozs7Ozs7O0dBU0c7QUFDSCx1QkFBOEIsSUFBVSxFQUFFLEdBQVk7SUFDcEQsRUFBRSxFQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3ZCLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1lBRXZCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO2dCQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztJQUNILENBQUM7SUFFSCx5REFBeUQ7SUFDekQsTUFBTSxDQUFDLFNBQVMsQ0FBQztBQUNuQixDQUFDO0FBWkQsc0NBWUM7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JHO0FBQ0gsaUNBQXdDLGNBQXVCLEVBQUUsUUFBaUI7SUFDaEYsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDO0lBRW5CLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLFFBQVEsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFFRCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEMsUUFBUSxHQUFHLEtBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsUUFBVSxDQUFDO1FBQ3RELGNBQWMsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBSSxRQUFRLEdBQUcsUUFBUSxVQUFJLGNBQWMsUUFBSSxDQUFDO0FBQ3ZELENBQUM7QUFiRCwwREFhQyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBVdGlsaXR5IG1ldGhvZHMgZm9yIHRoZSBJbm5lcmZhY2UgZnJhbWV3b3JrLlxuICpcbiAqIEBhdXRob3IgSnVzdGluIFRvb25cbiAqIEB2ZXJzaW9uIDAuMS4wXG4gKlxuICogQHJlcXVpcmVzIE5QTTpsb2Rhc2hcbiAqIEByZXF1aXJlcyBOUE06aW5mbGVjdGlvblxuICovXG5cbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAqIGFzIGluZmxlY3Rpb24gZnJvbSAnaW5mbGVjdGlvbic7XG5cbi8qKlxuICogRXZhbHVhdGVzIGEgc3RyaW5nIGFuZCBicmVha3MgaXQgaW50byBjb21wb25lbnQgcGFydHMsXG4gKiBpZGVudGlmeWluZyBpbmRpdmlkdWFsIHdvcmRzIGFuZCBpZ25vcmluZyBkaXZpZGVyIGNoYXJhY3RlcnMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0ciBUaGUgc3RyaW5nIHRvIGRlY29kZS5cbiAqXG4gKiBAcmV0dXJucyB7YXJyYXl9IEFuIGFycmF5IG9mIHN0cmluZ3MgZXh0cmFjdGVkIGZyb20gdGhlIG9yaWdpbmFsIHN0cmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyhuYW1lIDogc3RyaW5nKSA6IHN0cmluZ1tdIHtcbiAgY29uc3QgcmVnZXggPSAvKFxcdyspL2c7XG4gIGxldCBwYXJhbXMgOiBzdHJpbmdbXSA9IFtdO1xuICBsZXQgbWF0Y2g7XG5cbiAgLy8gbG9vcCB0aHJvdWdoIGFsbCBSZWdFeCBtYXRjaGVzIGFuZCBwdXNoIHJlc3VsdHMgdG8gYW4gYXJyYXlcbiAgd2hpbGUgKChtYXRjaCA9IHJlZ2V4LmV4ZWMobmFtZSkpKSB7XG4gICAgcGFyYW1zLnB1c2gobWF0Y2hbMV0pO1xuICB9XG5cbiAgcmV0dXJuIHBhcmFtcztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdmFsdWUgaXMgYSBudW1iZXIsIG9yIGlzIGEgc3RyaW5nIHdoaWNoIHdpbGwgcGFyc2UgYXMgYSBudW1iZXJcbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfG51bWJlcil9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWUgOiBzdHJpbmcgfCBudW1iZXIpIDogYm9vbGVhbiB7XG4gIHJldHVybiAhaXNOYU4odHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJ1xuICAgID8gdmFsdWVcbiAgICA6IHBhcnNlSW50KHZhbHVlLCAxMCkpO1xuICAvLyBOT1RFOiBoZXJlIGlzIGFuIGFsdGVybmF0ZSB2ZXJzaW9uIHRvIHJldmlldyBtb3JlIGNsb3NlbHkgY3JlZGl0IHRvXG4gIC8vIGB0aGVyZWFsYmVud2lsZXlgIHJldHVybiAodmFsdWUgJiYgIWlzTmFOKHZhbHVlKSkgfHwgdmFsdWUgPT09IDA7XG59XG5cbi8qKlxuICogUmVjdXJzaXZlbHkgc2VhcmNoIGFsbCBwYXJlbnROb2RlcyBvZiBnaXZlbiBOb2RlIHVudGlsIHRoZSByZXF1ZXN0ZWRcbiAqIHRhZyBuYW1lIGlzIGZvdW5kLCB0aGVuIHJldHVybnMgdGhlIE5vZGUuIFJldHVybnMgdGhlIG9yaWdpbmFsIGlmXG4gKiBubyBwYXJlbnQgaXMgZm91bmQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCBUaGUgc3RhcnRpbmcgZWxlbWVudC5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIHRhZyBuYW1lIHRvIGxvY2F0ZS5cbiAqXG4gKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaW5kUGFyZW50VGFnKG5vZGUgOiBhbnksIHRhZyA6IHN0cmluZykgOiBIVE1MRWxlbWVudCB8IHZvaWQge1xuICBpZihub2RlLnBhcmVudE5vZGUpIHtcbiAgICB3aGlsZSAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuXG4gICAgICBpZiAobm9kZS50YWdOYW1lICYmIChub2RlLnRhZ05hbWUgPT09IHRhZy50b0xvd2VyQ2FzZSgpKSlcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gIC8vIHRoZSByZXF1ZXN0ZWQgdGFnIGlzIG5vdCBhIHBhcmVudCBvZiB0aGUgb3JpZ2luYWwgTm9kZVxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIEdlbmVyYXRlIGEgc2VsZWN0b3Igc3RyaW5nIHRvIGxvY2F0ZSBhIGhpZGRlbiBmaWVsZCBmb3JcbiAqIGEgUmVhY3QgY29tcG9uZW50IHRvIGFjY2Vzcy4gQWNjZXB0cyBhbiBhdHRyaWJ1dGUgdmFsdWUgaW4gY2FtZWxDYXNlXG4gKiBvciBzbmFrZS1jYXNlIGFuZCB0cmFuc2Zvcm1zIGFwcHJvcHJpYXRlbHkuIElmIHRoZSB2YWx1ZSBzdGFydHMgd2l0aCBgXmAsXG4gKiB0aGUgc2VsZWN0b3Igd2lsbCBiZSB0YWlsb3JlZCB0byBsb29rIGZvciBhbGwgZWxlbWVudHMgd2l0aCB0aGUgZ2l2ZW5cbiAqIGRhdGEgYXR0cmlidXRlIGFuZCBhIHZhbHVlIHdoaWNoIHN0YXJ0cyB3aXRoIHRoZSBwcm92aWRlZCBzZWxlY3RvciBzdHJpbmcuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgJ1tkYXRhLXJlYWN0LW91dHB1dD1cInRlc3RTZWxlY3RvclN0cmluZ1wiXSdcbiAqIGNyZWF0ZURhdGFGaWVsZFNlbGVjdG9yKCd0ZXN0U2VsZWN0b3JTdHJpbmcnKTtcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gcmV0dXJucyAnW2RhdGEtdWktdmVyaWZ5LXRhcmdldD1cInRlc3RTZWxlY3RvclN0cmluZ1wiXWBcbiAqIGNyZWF0ZURhdGFGaWVsZFNlbGVjdG9yKCd0ZXN0U2VsZWN0b3JTdHJpbmcnLCAnZGF0YVVpVmVyaWZ5VGFyZ2V0Jyk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgJ1tkYXRhLXVpLXZlcmlmeS10YXJnZXRePVwidGVzdFNlbGVjdG9yU3RyaW5nXCJdYFxuICogY3JlYXRlRGF0YUZpZWxkU2VsZWN0b3IoJ150ZXN0U2VsZWN0b3JTdHJpbmcnLCAnZGF0YVVpVmVyaWZ5VGFyZ2V0Jyk7XG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yU3RyaW5nICAtIFRoZSBzdHJpbmcgdG8gdHJhbnNmb3JtLlxuICogQHBhcmFtIHtzdHJpbmd9IGRhdGFBdHRyICAtIFRoZSBkYXRhIGF0dHJpYnV0ZSB0byBhcHBseS5cbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9IC0gVGhlIGZvcm1hdHRlZCBzZWxlY3RvciBzdHJpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEYXRhRmllbGRTZWxlY3RvcihzZWxlY3RvclN0cmluZyA6IHN0cmluZywgZGF0YUF0dHIgOiBzdHJpbmcpIDogc3RyaW5nIHtcbiAgbGV0IG9wZXJhdG9yID0gJz0nO1xuXG4gIGlmIChkYXRhQXR0ci5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgZGF0YUF0dHIgPSBpbmZsZWN0aW9uLnRyYW5zZm9ybShkYXRhQXR0ciwgWyd1bmRlcnNjb3JlJywgJ2Rhc2hlcml6ZSddKTtcbiAgfVxuXG4gIGlmIChfLnN0YXJ0c1dpdGgoc2VsZWN0b3JTdHJpbmcsICdeJykpIHtcbiAgICBvcGVyYXRvciA9IGAke3NlbGVjdG9yU3RyaW5nLnNsaWNlKDAsIDEpfSR7b3BlcmF0b3J9YDtcbiAgICBzZWxlY3RvclN0cmluZyA9IHNlbGVjdG9yU3RyaW5nLnNsaWNlKDEpO1xuICB9XG5cbiAgcmV0dXJuIGBbJHtkYXRhQXR0cn0ke29wZXJhdG9yfVwiJHtzZWxlY3RvclN0cmluZ31cIl1gO1xufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pZi51dGlscy50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The primary entry for Innerface.\r\n *\r\n * @author Justin Toon\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = __webpack_require__(0);\r\nvar controllers = __webpack_require__(5);\r\n/**\r\n * A system of simple UI actions implemented with an HTML API.\r\n *\r\n * @since 0.1.0\r\n */\r\nvar Innerface = (function () {\r\n    function Innerface() {\r\n    }\r\n    /**\r\n     * Initialize the library.\r\n     */\r\n    Innerface.init = function () {\r\n        _.forEach(controllers, function (controller, key) {\r\n            controller.initialize();\r\n        });\r\n    };\r\n    return Innerface;\r\n}());\r\nexports.default = Innerface;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZWFjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7O0dBS0c7O0FBRUgsK0JBQTRCO0FBRzVCLHlDQUE2QztBQUU3Qzs7OztHQUlHO0FBQ0g7SUFBQTtJQVNDLENBQUM7SUFSQTs7T0FFRztJQUNXLGNBQUksR0FBbEI7UUFDRSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxVQUFDLFVBQWdDLEVBQUUsR0FBVztZQUNuRSxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0YsZ0JBQUM7QUFBRCxDQUFDIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIFRoZSBwcmltYXJ5IGVudHJ5IGZvciBJbm5lcmZhY2UuXG4gKlxuICogQGF1dGhvciBKdXN0aW4gVG9vblxuICogQGxpY2Vuc2UgTUlUXG4gKi9cblxuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgeyBTRUxFQ1RPUlMgfSBmcm9tICcuL2lmLmNvbnN0JztcbmltcG9ydCAqIGFzIGNvbnRyb2xsZXJzIGZyb20gJy4vY29udHJvbGxlcnMnO1xuXG4vKipcbiAqIEEgc3lzdGVtIG9mIHNpbXBsZSBVSSBhY3Rpb25zIGltcGxlbWVudGVkIHdpdGggYW4gSFRNTCBBUEkuXG4gKlxuICogQHNpbmNlIDAuMS4wXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElubmVyZmFjZSB7XG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHRoZSBsaWJyYXJ5LlxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBpbml0KCkge1xuICAgIF8uZm9yRWFjaChjb250cm9sbGVycywgKGNvbnRyb2xsZXI6IElubmVyZmFjZS5Db250cm9sbGVyLCBrZXk6IHN0cmluZykgPT4ge1xuICAgICAgY29udHJvbGxlci5pbml0aWFsaXplKCk7XG4gICAgfSk7XG4gIH1cbiB9XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvaW5kZXgudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_controller_disable_1 = __webpack_require__(6);\r\nexports.disable = if_controller_disable_1.default;\r\nvar if_controller_validateInput_1 = __webpack_require__(12);\r\nexports.validateInput = if_controller_validateInput_1.default;\r\nvar if_controller_validateForm_1 = __webpack_require__(13);\r\nexports.validateForm = if_controller_validateForm_1.default;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvaW5kZXgudHM/NDdhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFEQUE4QztBQUs1QyxrQkFMSywrQkFBTyxDQUtMO0FBSlQsNERBQTBEO0FBS3hELHdCQUxLLHFDQUFhLENBS0w7QUFKZiwyREFBd0Q7QUFLdEQsdUJBTEssb0NBQVksQ0FLTCIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpc2FibGUgZnJvbSAnLi9pZi5jb250cm9sbGVyLmRpc2FibGUnO1xuaW1wb3J0IHZhbGlkYXRlSW5wdXQgZnJvbSAnLi9pZi5jb250cm9sbGVyLnZhbGlkYXRlSW5wdXQnO1xuaW1wb3J0IHZhbGlkYXRlRm9ybSBmcm9tICcuL2lmLmNvbnRyb2xsZXIudmFsaWRhdGVGb3JtJztcblxuZXhwb3J0IHtcbiAgZGlzYWJsZSxcbiAgdmFsaWRhdGVJbnB1dCxcbiAgdmFsaWRhdGVGb3JtXG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbnRyb2xsZXJzL2luZGV4LnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The controller for the `disable` module.\r\n *\r\n * @author Justin Toon\r\n * @license MIT\r\n *\r\n * @requires ../config/if.controller.js:controller\r\n * @requires ../modules/if.module.disable.js:disable\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_controller_1 = __webpack_require__(1);\r\nvar modules_1 = __webpack_require__(7);\r\n/**\r\n * The initialization function for creating the `disable` {@link Controller}.\r\n *\r\n * @returns {Controller}\r\n */\r\nfunction disable() {\r\n    /**\r\n     * The name of the controller.\r\n     *\r\n     * @const\r\n     * @type {string}\r\n     */\r\n    var name = 'disable';\r\n    /**\r\n     * Selector strings for the `disable` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var targets = if_controller_1.default.getTargets(name);\r\n    /**\r\n     * Events created for the `disable` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var events = {\r\n        initOnLoad: function () {\r\n            window.onload = function () {\r\n                var target = targets.target, condition = targets.condition;\r\n                modules_1.disable(target, condition).init();\r\n            };\r\n        }\r\n    };\r\n    return new if_controller_1.default({ name: name, targets: targets, events: events });\r\n}\r\nexports.default = disable;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvaWYuY29udHJvbGxlci5kaXNhYmxlLnRzPzVjMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7OztHQVFHOztBQUlILDZDQUFpRDtBQUNqRCx1Q0FBb0Q7QUFFcEQ7Ozs7R0FJRztBQUNIO0lBQ0U7Ozs7O09BS0c7SUFDSCxJQUFNLElBQUksR0FBRyxTQUFTLENBQUM7SUFFdkI7Ozs7O09BS0c7SUFDSCxJQUFNLE9BQU8sR0FBb0IsdUJBQVUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFN0Q7Ozs7O09BS0c7SUFDSCxJQUFNLE1BQU0sR0FBa0I7UUFDNUIsVUFBVSxFQUFFO1lBQ1YsTUFBTSxDQUFDLE1BQU0sR0FBRztnQkFDUCwyQkFBTSxFQUFFLDZCQUFTLENBQVk7Z0JBQ3BDLGlCQUFhLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzFDLENBQUM7UUFDSCxDQUFDO0tBQ0YsQ0FBQztJQUVGLE1BQU0sQ0FBQyxJQUFJLHVCQUFVLENBQUMsRUFBQyxJQUFJLFFBQUUsT0FBTyxXQUFFLE1BQU0sVUFBQyxDQUFDLENBQUM7QUFDakQsQ0FBQztBQWpDRCwwQkFpQ0MiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgVGhlIGNvbnRyb2xsZXIgZm9yIHRoZSBgZGlzYWJsZWAgbW9kdWxlLlxuICpcbiAqIEBhdXRob3IgSnVzdGluIFRvb25cbiAqIEBsaWNlbnNlIE1JVFxuICpcbiAqIEByZXF1aXJlcyAuLi9jb25maWcvaWYuY29udHJvbGxlci5qczpjb250cm9sbGVyXG4gKiBAcmVxdWlyZXMgLi4vbW9kdWxlcy9pZi5tb2R1bGUuZGlzYWJsZS5qczpkaXNhYmxlXG4gKi9cblxuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgQ29udHJvbGxlciBmcm9tICcuLi9jb25maWcvaWYuY29udHJvbGxlcic7XG5pbXBvcnQge2Rpc2FibGUgYXMgZGlzYWJsZU1vZHVsZX0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbi8qKlxuICogVGhlIGluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIGZvciBjcmVhdGluZyB0aGUgYGRpc2FibGVgIHtAbGluayBDb250cm9sbGVyfS5cbiAqXG4gKiBAcmV0dXJucyB7Q29udHJvbGxlcn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBjb250cm9sbGVyLlxuICAgKlxuICAgKiBAY29uc3RcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIGNvbnN0IG5hbWUgPSAnZGlzYWJsZSc7XG5cbiAgLyoqXG4gICAqIFNlbGVjdG9yIHN0cmluZ3MgZm9yIHRoZSBgZGlzYWJsZWAge0BsaW5rIENvbnRyb2xsZXJ9LlxuICAgKlxuICAgKiBAY29uc3RcbiAgICogQHR5cGUge09iamVjdH1cbiAgICovXG4gIGNvbnN0IHRhcmdldHMgOiBOb2RlTGlzdE9iamVjdCA9IENvbnRyb2xsZXIuZ2V0VGFyZ2V0cyhuYW1lKTtcblxuICAvKipcbiAgICogRXZlbnRzIGNyZWF0ZWQgZm9yIHRoZSBgZGlzYWJsZWAge0BsaW5rIENvbnRyb2xsZXJ9LlxuICAgKlxuICAgKiBAY29uc3RcbiAgICogQHR5cGUge09iamVjdH1cbiAgICovXG4gIGNvbnN0IGV2ZW50cyA6IE1ldGhvZE9iamVjdCA9IHtcbiAgICBpbml0T25Mb2FkOiAoKSA9PiB7XG4gICAgICB3aW5kb3cub25sb2FkID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB7dGFyZ2V0LCBjb25kaXRpb259ID0gdGFyZ2V0cztcbiAgICAgICAgZGlzYWJsZU1vZHVsZSh0YXJnZXQsIGNvbmRpdGlvbikuaW5pdCgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbmV3IENvbnRyb2xsZXIoe25hbWUsIHRhcmdldHMsIGV2ZW50c30pO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2NvbnRyb2xsZXJzL2lmLmNvbnRyb2xsZXIuZGlzYWJsZS50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_module_disable_1 = __webpack_require__(8);\r\nexports.disable = if_module_disable_1.default;\r\nvar if_module_validateInput_1 = __webpack_require__(9);\r\nexports.validateInput = if_module_validateInput_1.default;\r\nvar if_module_validateForm_1 = __webpack_require__(11);\r\nexports.validateForm = if_module_validateForm_1.default;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9pbmRleC50cz81MTExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQTBDO0FBS3hDLGtCQUxLLDJCQUFPLENBS0w7QUFKVCx1REFBc0Q7QUFLcEQsd0JBTEssaUNBQWEsQ0FLTDtBQUpmLHVEQUFvRDtBQUtsRCx1QkFMSyxnQ0FBWSxDQUtMIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGlzYWJsZSBmcm9tICcuL2lmLm1vZHVsZS5kaXNhYmxlJztcbmltcG9ydCB2YWxpZGF0ZUlucHV0IGZyb20gJy4vaWYubW9kdWxlLnZhbGlkYXRlSW5wdXQnO1xuaW1wb3J0IHZhbGlkYXRlRm9ybSBmcm9tICcuL2lmLm1vZHVsZS52YWxpZGF0ZUZvcm0nO1xuXG5leHBvcnQge1xuICBkaXNhYmxlLFxuICB2YWxpZGF0ZUlucHV0LFxuICB2YWxpZGF0ZUZvcm1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9pbmRleC50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The `disable` module.\r\n *\r\n * @author Justin Toon\r\n * @version 0.1.0\r\n * @license MIT\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A module for setting and managing a disabled state on an element.\r\n *\r\n * @module innerface/disable\r\n * @since 0.1.0\r\n */\r\nvar _ = __webpack_require__(0);\r\nvar if_const_1 = __webpack_require__(2);\r\nfunction disable(targets, condition) {\r\n    /**\r\n    * Determine whether or not the element should be considered disabled.\r\n    *\r\n    * @protected\r\n    *\r\n    * @return {boolean} - <code>true</code> if the field should be disabled.\r\n    */\r\n    function shouldBeDisabled() {\r\n        if (condition.type === 'checkbox') {\r\n            var checkboxCondition = condition\r\n                .dataset\r\n                .uiDisableCondition\r\n                .toString()\r\n                .split('|');\r\n            var isChecked = condition.checked;\r\n            return checkboxCondition[1].startsWith('!')\r\n                ? !isChecked\r\n                : isChecked;\r\n        }\r\n        else {\r\n            var stringCondition = condition\r\n                .dataset\r\n                .uiDisableCondition\r\n                .toString()\r\n                .split('|');\r\n            if (stringCondition[1]) {\r\n                switch (stringCondition[1]) {\r\n                    case 'length':\r\n                        return !_.isEmpty(condition.value);\r\n                    case 'includes':\r\n                        if (stringCondition[2]) {\r\n                            var input = document.querySelector(stringCondition[2]);\r\n                            var testGroup = JSON\r\n                                .parse(input.value || '')\r\n                                .map(function (val) { return val.toString(); });\r\n                            return _.includes(testGroup, condition.value);\r\n                        }\r\n                        else {\r\n                            return false;\r\n                        }\r\n                    default:\r\n                        return condition\r\n                            .value\r\n                            .toString() === stringCondition[1];\r\n                }\r\n            }\r\n            else {\r\n                return condition.value === 'true';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Looks up related condition field for a disabled item.\r\n     *\r\n     * @protected\r\n     * @param {string} id The lookup string.\r\n     *\r\n     * @returns {Element}\r\n     */\r\n    function getConditionField(target) {\r\n        return _.filter(condition, function (item, index) { return item.dataset.uiDisableCondition === target.dataset.uiCondition; })[0];\r\n    }\r\n    /**\r\n       * Sets a listener on a condition field to watch for changes.\r\n       *\r\n       * @protected\r\n       * @param {HTMLElement} target The element to affect.\r\n       * @param {HTMLElement} condition The conditional field.\r\n       *\r\n       */\r\n    function setListener(target) {\r\n        condition.addEventListener('change', function (event) {\r\n            setState(target, shouldBeDisabled());\r\n        });\r\n    }\r\n    /**\r\n       * Set a disabled state on a target.\r\n       *\r\n       * @param {HTMLElement} target The target to affect.\r\n       * @param {boolean} isDisabled Whether or not to disable.\r\n       */\r\n    function setState(target, isDisabled) {\r\n        target.disabled = isDisabled === true;\r\n        target\r\n            .classList\r\n            .toggle(if_const_1.STATES.isDisabled, isDisabled === true);\r\n    }\r\n    ;\r\n    /**\r\n       * Initialize the module for a set of targets.\r\n       */\r\n    function init() {\r\n        _.forEach(targets, function (target, index) {\r\n            var id = target\r\n                .dataset\r\n                .uiDisable\r\n                .toString();\r\n            setState(target, shouldBeDisabled());\r\n            setListener(target);\r\n        });\r\n    }\r\n    return { init: init };\r\n}\r\nexports.default = disable;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9pZi5tb2R1bGUuZGlzYWJsZS50cz82YmVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7O0dBTUc7O0FBRUg7Ozs7O0dBS0c7QUFFSCwrQkFBNEI7QUFDNUIsd0NBQW1DO0FBRW5DLGlCQUFnQyxPQUFrQixFQUFFLFNBQW9CO0lBSXRFOzs7Ozs7TUFNRTtJQUNGO1FBQ0UsRUFBRSxFQUFDLFNBQVMsQ0FBQyxJQUFJLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNqQyxJQUFNLGlCQUFpQixHQUFjLFNBQVM7aUJBQzNDLE9BQU87aUJBQ1Asa0JBQWtCO2lCQUNsQixRQUFRLEVBQUU7aUJBQ1YsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBRWQsSUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQztZQUVwQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQztrQkFDdkMsQ0FBQyxTQUFTO2tCQUNWLFNBQVMsQ0FBQztRQUNoQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFNLGVBQWUsR0FBYyxTQUFTO2lCQUN6QyxPQUFPO2lCQUNQLGtCQUFrQjtpQkFDbEIsUUFBUSxFQUFFO2lCQUNWLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUVkLEVBQUUsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLE1BQU0sQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzNCLEtBQUssUUFBUTt3QkFDWCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDckMsS0FBSyxVQUFVO3dCQUNiLEVBQUUsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3ZCLElBQU0sS0FBSyxHQUFhLFFBQVEsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ25FLElBQU0sU0FBUyxHQUFjLElBQUk7aUNBQzlCLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztpQ0FDeEIsR0FBRyxDQUFDLFVBQUMsR0FBWSxJQUFLLFVBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBZCxDQUFjLENBQUMsQ0FBQzs0QkFDekMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUM7d0JBQy9DLENBQUM7d0JBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ04sTUFBTSxDQUFDLEtBQUssQ0FBQzt3QkFDZixDQUFDO29CQUNIO3dCQUNFLE1BQU0sQ0FBQyxTQUFTOzZCQUNiLEtBQUs7NkJBQ0wsUUFBUSxFQUFFLEtBQUssZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN6QyxDQUFDO1lBQ0gsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxLQUFLLE1BQU0sQ0FBQztZQUNwQyxDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsMkJBQTJCLE1BQW9CO1FBQzdDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxVQUFDLElBQUksRUFBRSxLQUFLLElBQUssV0FBSSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsS0FBSyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBOUQsQ0FBOEQsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pILENBQUM7SUFFRDs7Ozs7OztTQU9LO0lBQ0wscUJBQXFCLE1BQW9CO1FBQ3ZDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsZUFBSztZQUN4QyxRQUFRLENBQUMsTUFBTSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7Ozs7U0FLSztJQUNMLGtCQUFrQixNQUFvQixFQUFFLFVBQW9CO1FBQzFELE1BQU0sQ0FBQyxRQUFRLEdBQUcsVUFBVSxLQUFLLElBQUksQ0FBQztRQUN0QyxNQUFNO2FBQ0gsU0FBUzthQUNULE1BQU0sQ0FBQyxpQkFBTSxDQUFDLFVBQVUsRUFBRSxVQUFVLEtBQUssSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUFBLENBQUM7SUFFRjs7U0FFSztJQUNMO1FBQ0UsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsVUFBQyxNQUFNLEVBQUUsS0FBSztZQUMvQixJQUFNLEVBQUUsR0FBWSxNQUFNO2lCQUN2QixPQUFPO2lCQUNQLFNBQVM7aUJBQ1QsUUFBUSxFQUFFLENBQUM7WUFFZCxRQUFRLENBQUMsTUFBTSxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUNyQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTSxDQUFDLEVBQUMsSUFBSSxRQUFDLENBQUM7QUFDaEIsQ0FBQztBQS9HRCwwQkErR0MiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgVGhlIGBkaXNhYmxlYCBtb2R1bGUuXG4gKlxuICogQGF1dGhvciBKdXN0aW4gVG9vblxuICogQHZlcnNpb24gMC4xLjBcbiAqIEBsaWNlbnNlIE1JVFxuICovXG5cbi8qKlxuICogQSBtb2R1bGUgZm9yIHNldHRpbmcgYW5kIG1hbmFnaW5nIGEgZGlzYWJsZWQgc3RhdGUgb24gYW4gZWxlbWVudC5cbiAqXG4gKiBAbW9kdWxlIGlubmVyZmFjZS9kaXNhYmxlXG4gKiBAc2luY2UgMC4xLjBcbiAqL1xuXG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQge1NUQVRFU30gZnJvbSAnLi4vaWYuY29uc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXNhYmxlKHRhcmdldHMgOiBOb2RlTGlzdCwgY29uZGl0aW9uIDogTm9kZUxpc3QpIDoge1xuICBpbml0OiBGdW5jdGlvblxufVxue1xuICAvKipcbiAgKiBEZXRlcm1pbmUgd2hldGhlciBvciBub3QgdGhlIGVsZW1lbnQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgZGlzYWJsZWQuXG4gICpcbiAgKiBAcHJvdGVjdGVkXG4gICpcbiAgKiBAcmV0dXJuIHtib29sZWFufSAtIDxjb2RlPnRydWU8L2NvZGU+IGlmIHRoZSBmaWVsZCBzaG91bGQgYmUgZGlzYWJsZWQuXG4gICovXG4gIGZ1bmN0aW9uIHNob3VsZEJlRGlzYWJsZWQoKSA6IGJvb2xlYW4ge1xuICAgIGlmKGNvbmRpdGlvbi50eXBlID09PSAnY2hlY2tib3gnKSB7XG4gICAgICBjb25zdCBjaGVja2JveENvbmRpdGlvbiA6IHN0cmluZ1tdID0gY29uZGl0aW9uXG4gICAgICAgIC5kYXRhc2V0XG4gICAgICAgIC51aURpc2FibGVDb25kaXRpb25cbiAgICAgICAgLnRvU3RyaW5nKClcbiAgICAgICAgLnNwbGl0KCd8Jyk7XG5cbiAgICAgIGNvbnN0IGlzQ2hlY2tlZCA9IGNvbmRpdGlvbi5jaGVja2VkO1xuXG4gICAgICByZXR1cm4gY2hlY2tib3hDb25kaXRpb25bMV0uc3RhcnRzV2l0aCgnIScpXG4gICAgICAgID8gIWlzQ2hlY2tlZFxuICAgICAgICA6IGlzQ2hlY2tlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgc3RyaW5nQ29uZGl0aW9uIDogc3RyaW5nW10gPSBjb25kaXRpb25cbiAgICAgICAgLmRhdGFzZXRcbiAgICAgICAgLnVpRGlzYWJsZUNvbmRpdGlvblxuICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAuc3BsaXQoJ3wnKTtcblxuICAgICAgaWYgKHN0cmluZ0NvbmRpdGlvblsxXSkge1xuICAgICAgICBzd2l0Y2ggKHN0cmluZ0NvbmRpdGlvblsxXSkge1xuICAgICAgICAgIGNhc2UgJ2xlbmd0aCc6XG4gICAgICAgICAgICByZXR1cm4gIV8uaXNFbXB0eShjb25kaXRpb24udmFsdWUpO1xuICAgICAgICAgIGNhc2UgJ2luY2x1ZGVzJzpcbiAgICAgICAgICAgIGlmIChzdHJpbmdDb25kaXRpb25bMl0pIHtcbiAgICAgICAgICAgICAgY29uc3QgaW5wdXQgOiBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzdHJpbmdDb25kaXRpb25bMl0pO1xuICAgICAgICAgICAgICBjb25zdCB0ZXN0R3JvdXAgOiBzdHJpbmdbXSA9IEpTT05cbiAgICAgICAgICAgICAgICAucGFyc2UoaW5wdXQudmFsdWUgfHwgJycpXG4gICAgICAgICAgICAgICAgLm1hcCgodmFsIDogc3RyaW5nKSA9PiB2YWwudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgIHJldHVybiBfLmluY2x1ZGVzKHRlc3RHcm91cCwgY29uZGl0aW9uLnZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gY29uZGl0aW9uXG4gICAgICAgICAgICAgIC52YWx1ZVxuICAgICAgICAgICAgICAudG9TdHJpbmcoKSA9PT0gc3RyaW5nQ29uZGl0aW9uWzFdO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY29uZGl0aW9uLnZhbHVlID09PSAndHJ1ZSc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIExvb2tzIHVwIHJlbGF0ZWQgY29uZGl0aW9uIGZpZWxkIGZvciBhIGRpc2FibGVkIGl0ZW0uXG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIFRoZSBsb29rdXAgc3RyaW5nLlxuICAgKlxuICAgKiBAcmV0dXJucyB7RWxlbWVudH1cbiAgICovXG4gIGZ1bmN0aW9uIGdldENvbmRpdGlvbkZpZWxkKHRhcmdldCA6IEhUTUxFbGVtZW50KSA6IE5vZGUge1xuICAgIHJldHVybiBfLmZpbHRlcihjb25kaXRpb24sIChpdGVtLCBpbmRleCkgPT4gaXRlbS5kYXRhc2V0LnVpRGlzYWJsZUNvbmRpdGlvbiA9PT0gdGFyZ2V0LmRhdGFzZXQudWlDb25kaXRpb24pWzBdO1xuICB9XG5cbiAgLyoqXG4gICAgICogU2V0cyBhIGxpc3RlbmVyIG9uIGEgY29uZGl0aW9uIGZpZWxkIHRvIHdhdGNoIGZvciBjaGFuZ2VzLlxuICAgICAqXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHRhcmdldCBUaGUgZWxlbWVudCB0byBhZmZlY3QuXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29uZGl0aW9uIFRoZSBjb25kaXRpb25hbCBmaWVsZC5cbiAgICAgKlxuICAgICAqL1xuICBmdW5jdGlvbiBzZXRMaXN0ZW5lcih0YXJnZXQgOiBIVE1MRWxlbWVudCkge1xuICAgIGNvbmRpdGlvbi5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBldmVudCA9PiB7XG4gICAgICBzZXRTdGF0ZSh0YXJnZXQsIHNob3VsZEJlRGlzYWJsZWQoKSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICAgKiBTZXQgYSBkaXNhYmxlZCBzdGF0ZSBvbiBhIHRhcmdldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHRhcmdldCBUaGUgdGFyZ2V0IHRvIGFmZmVjdC5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzRGlzYWJsZWQgV2hldGhlciBvciBub3QgdG8gZGlzYWJsZS5cbiAgICAgKi9cbiAgZnVuY3Rpb24gc2V0U3RhdGUodGFyZ2V0IDogSFRNTEVsZW1lbnQsIGlzRGlzYWJsZWQgOiBib29sZWFuKSB7XG4gICAgdGFyZ2V0LmRpc2FibGVkID0gaXNEaXNhYmxlZCA9PT0gdHJ1ZTtcbiAgICB0YXJnZXRcbiAgICAgIC5jbGFzc0xpc3RcbiAgICAgIC50b2dnbGUoU1RBVEVTLmlzRGlzYWJsZWQsIGlzRGlzYWJsZWQgPT09IHRydWUpO1xuICB9O1xuXG4gIC8qKlxuICAgICAqIEluaXRpYWxpemUgdGhlIG1vZHVsZSBmb3IgYSBzZXQgb2YgdGFyZ2V0cy5cbiAgICAgKi9cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBfLmZvckVhY2godGFyZ2V0cywgKHRhcmdldCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGlkIDogc3RyaW5nID0gdGFyZ2V0XG4gICAgICAgIC5kYXRhc2V0XG4gICAgICAgIC51aURpc2FibGVcbiAgICAgICAgLnRvU3RyaW5nKCk7XG5cbiAgICAgIHNldFN0YXRlKHRhcmdldCwgc2hvdWxkQmVEaXNhYmxlZCgpKTtcbiAgICAgIHNldExpc3RlbmVyKHRhcmdldCk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge2luaXR9O1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvaWYubW9kdWxlLmRpc2FibGUudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The `validateInput` module.\r\n *\r\n * @author Justin Toon\r\n * @version 0.1.0\r\n *\r\n * @requires ../if.utils.js:isNumber\r\n * @requires ../if.utils.js:decodeString\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_utils_1 = __webpack_require__(3);\r\n/**\r\n * A module for validating form fields based on one or more rules.\r\n *\r\n * @module innerface/validateInput\r\n * @since 0.1.0\r\n */\r\n/**\r\n * Validate a form field.\r\n *\r\n * @since 0.1.0\r\n *\r\n * @param {string} value - The value to validate.\r\n * @param {string} rules - A pipe-separated list of one or more rules.\r\n *\r\n * @returns {boolean} - `true` if the value is valid\r\n */\r\nfunction validateInputModule(value, rules) {\r\n    /**\r\n     * Validation functions.\r\n     *\r\n     * @constant\r\n     * @type {Object}\r\n     */\r\n    var RULES = {\r\n        integer: function (value) {\r\n            return if_utils_1.isNumber(value) && Number.isInteger(Number(value));\r\n        },\r\n        greaterThan: function (limit, value) {\r\n            return if_utils_1.isNumber(value) && Number(value) > limit;\r\n        },\r\n        greaterThanOrEqualTo: function (limit, value) {\r\n            return if_utils_1.isNumber(value) && Number(value) >= limit;\r\n        },\r\n        lessThan: function (limit, value) {\r\n            return if_utils_1.isNumber(value) && Number(value) < limit;\r\n        },\r\n        lessThanOrEqualTo: function (limit, value) {\r\n            return if_utils_1.isNumber(value) && Number(value) <= limit;\r\n        }\r\n    };\r\n    return prepareValidation(rules).reduce(function (isValid, params) {\r\n        if (!isValid)\r\n            return false;\r\n        var ruleToExecute = params\r\n            .shift()\r\n            .toString();\r\n        return RULES[ruleToExecute].apply(RULES, params);\r\n    }, true);\r\n    /**\r\n     * Prepares the validation rules.\r\n     *\r\n     * @protected\r\n     * @param {string} rules The provided validation rules in string format.\r\n     *\r\n     * @returns {(string|number)[]}\r\n     */\r\n    function prepareValidation(rules) {\r\n        return rules\r\n            .split('|')\r\n            .map(function (rule) {\r\n            return [].concat(if_utils_1.decodeString(rule).map(function (part) { return (if_utils_1.isNumber(part)\r\n                ? Number(part)\r\n                : part); }), [value]);\r\n        });\r\n    }\r\n}\r\nexports.default = validateInputModule;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9pZi5tb2R1bGUudmFsaWRhdGVJbnB1dC50cz9iYjcwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7R0FRRzs7QUFFSCx3Q0FBbUQ7QUFFbkQ7Ozs7O0dBS0c7QUFFSDs7Ozs7Ozs7O0dBU0c7QUFDSCw2QkFBNEMsS0FBYyxFQUFFLEtBQWM7SUFDeEU7Ozs7O09BS0c7SUFDSCxJQUFNLEtBQUssR0FBaUI7UUFDMUIsT0FBTyxFQUFFLFVBQUMsS0FBdUI7WUFDL0IsTUFBTSxDQUFDLG1CQUFRLENBQUMsS0FBSyxDQUFDLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM1RCxDQUFDO1FBQ0QsV0FBVyxFQUFFLFVBQUMsS0FBYyxFQUFFLEtBQXVCO1lBQ25ELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDbEQsQ0FBQztRQUNELG9CQUFvQixFQUFFLFVBQUMsS0FBYyxFQUFFLEtBQXVCO1lBQzVELE1BQU0sQ0FBQyxtQkFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUM7UUFDbkQsQ0FBQztRQUNELFFBQVEsRUFBRSxVQUFDLEtBQWMsRUFBRSxLQUF1QjtZQUNoRCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ2xELENBQUM7UUFDRCxpQkFBaUIsRUFBRSxVQUFDLEtBQWMsRUFBRSxLQUF1QjtZQUN6RCxNQUFNLENBQUMsbUJBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDO1FBQ25ELENBQUM7S0FDRixDQUFDO0lBRUYsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLE9BQWlCLEVBQUUsTUFBa0M7UUFDM0YsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFDWCxNQUFNLENBQUMsS0FBSyxDQUFDO1FBRWYsSUFBTSxhQUFhLEdBQVksTUFBTTthQUNsQyxLQUFLLEVBQUU7YUFDUCxRQUFRLEVBQUUsQ0FBQztRQUVkLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLE9BQXBCLEtBQUssRUFBbUIsTUFBTSxFQUFFO0lBQ3pDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUVUOzs7Ozs7O09BT0c7SUFDSCwyQkFBMkIsS0FBSztRQUM5QixNQUFNLENBQUMsS0FBSzthQUNULEtBQUssQ0FBQyxHQUFHLENBQUM7YUFDVixHQUFHLENBQUMsVUFBQyxJQUFhO1lBQ2pCLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLHVCQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLGNBQUksSUFBSSxRQUFDLG1CQUFRLENBQUMsSUFBSSxDQUFDO2tCQUMzRCxNQUFNLENBQUMsSUFBSSxDQUFDO2tCQUNaLElBQUksQ0FBQyxFQUZ1QyxDQUV2QyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztBQUNILENBQUM7QUFyREQsc0NBcURDIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIFRoZSBgdmFsaWRhdGVJbnB1dGAgbW9kdWxlLlxuICpcbiAqIEBhdXRob3IgSnVzdGluIFRvb25cbiAqIEB2ZXJzaW9uIDAuMS4wXG4gKlxuICogQHJlcXVpcmVzIC4uL2lmLnV0aWxzLmpzOmlzTnVtYmVyXG4gKiBAcmVxdWlyZXMgLi4vaWYudXRpbHMuanM6ZGVjb2RlU3RyaW5nXG4gKi9cblxuaW1wb3J0IHtpc051bWJlciwgZGVjb2RlU3RyaW5nfSBmcm9tICcuLi9pZi51dGlscyc7XG5cbi8qKlxuICogQSBtb2R1bGUgZm9yIHZhbGlkYXRpbmcgZm9ybSBmaWVsZHMgYmFzZWQgb24gb25lIG9yIG1vcmUgcnVsZXMuXG4gKlxuICogQG1vZHVsZSBpbm5lcmZhY2UvdmFsaWRhdGVJbnB1dFxuICogQHNpbmNlIDAuMS4wXG4gKi9cblxuLyoqXG4gKiBWYWxpZGF0ZSBhIGZvcm0gZmllbGQuXG4gKlxuICogQHNpbmNlIDAuMS4wXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIC0gVGhlIHZhbHVlIHRvIHZhbGlkYXRlLlxuICogQHBhcmFtIHtzdHJpbmd9IHJ1bGVzIC0gQSBwaXBlLXNlcGFyYXRlZCBsaXN0IG9mIG9uZSBvciBtb3JlIHJ1bGVzLlxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufSAtIGB0cnVlYCBpZiB0aGUgdmFsdWUgaXMgdmFsaWRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmFsaWRhdGVJbnB1dE1vZHVsZSh2YWx1ZSA6IHN0cmluZywgcnVsZXMgOiBzdHJpbmcpIDogYm9vbGVhbiB7XG4gIC8qKlxuICAgKiBWYWxpZGF0aW9uIGZ1bmN0aW9ucy5cbiAgICpcbiAgICogQGNvbnN0YW50XG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqL1xuICBjb25zdCBSVUxFUzogTWV0aG9kT2JqZWN0ID0ge1xuICAgIGludGVnZXI6ICh2YWx1ZSA6IG51bWJlciB8IHN0cmluZykgPT4ge1xuICAgICAgcmV0dXJuIGlzTnVtYmVyKHZhbHVlKSAmJiBOdW1iZXIuaXNJbnRlZ2VyKE51bWJlcih2YWx1ZSkpO1xuICAgIH0sXG4gICAgZ3JlYXRlclRoYW46IChsaW1pdCA6IG51bWJlciwgdmFsdWUgOiBudW1iZXIgfCBzdHJpbmcpID0+IHtcbiAgICAgIHJldHVybiBpc051bWJlcih2YWx1ZSkgJiYgTnVtYmVyKHZhbHVlKSA+IGxpbWl0O1xuICAgIH0sXG4gICAgZ3JlYXRlclRoYW5PckVxdWFsVG86IChsaW1pdCA6IG51bWJlciwgdmFsdWUgOiBudW1iZXIgfCBzdHJpbmcpID0+IHtcbiAgICAgIHJldHVybiBpc051bWJlcih2YWx1ZSkgJiYgTnVtYmVyKHZhbHVlKSA+PSBsaW1pdDtcbiAgICB9LFxuICAgIGxlc3NUaGFuOiAobGltaXQgOiBudW1iZXIsIHZhbHVlIDogbnVtYmVyIHwgc3RyaW5nKSA9PiB7XG4gICAgICByZXR1cm4gaXNOdW1iZXIodmFsdWUpICYmIE51bWJlcih2YWx1ZSkgPCBsaW1pdDtcbiAgICB9LFxuICAgIGxlc3NUaGFuT3JFcXVhbFRvOiAobGltaXQgOiBudW1iZXIsIHZhbHVlIDogbnVtYmVyIHwgc3RyaW5nKSA9PiB7XG4gICAgICByZXR1cm4gaXNOdW1iZXIodmFsdWUpICYmIE51bWJlcih2YWx1ZSkgPD0gbGltaXQ7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBwcmVwYXJlVmFsaWRhdGlvbihydWxlcykucmVkdWNlKChpc1ZhbGlkIDogYm9vbGVhbiwgcGFyYW1zIDogQXJyYXkgPCBzdHJpbmcgfCBudW1iZXIgPikgPT4ge1xuICAgIGlmICghaXNWYWxpZClcbiAgICAgIHJldHVybiBmYWxzZTtcblxuICAgIGNvbnN0IHJ1bGVUb0V4ZWN1dGUgOiBzdHJpbmcgPSBwYXJhbXNcbiAgICAgIC5zaGlmdCgpXG4gICAgICAudG9TdHJpbmcoKTtcblxuICAgIHJldHVybiBSVUxFU1tydWxlVG9FeGVjdXRlXSguLi5wYXJhbXMpO1xuICB9LCB0cnVlKTtcblxuICAvKipcbiAgICogUHJlcGFyZXMgdGhlIHZhbGlkYXRpb24gcnVsZXMuXG4gICAqXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJ1bGVzIFRoZSBwcm92aWRlZCB2YWxpZGF0aW9uIHJ1bGVzIGluIHN0cmluZyBmb3JtYXQuXG4gICAqXG4gICAqIEByZXR1cm5zIHsoc3RyaW5nfG51bWJlcilbXX1cbiAgICovXG4gIGZ1bmN0aW9uIHByZXBhcmVWYWxpZGF0aW9uKHJ1bGVzKTogKHN0cmluZyB8IG51bWJlcilbXVtde1xuICAgIHJldHVybiBydWxlc1xuICAgICAgLnNwbGl0KCd8JylcbiAgICAgIC5tYXAoKHJ1bGUgOiBzdHJpbmcpIDogKHN0cmluZyB8IG51bWJlcilbXSA9PiB7XG4gICAgICAgIHJldHVybiBbXS5jb25jYXQoZGVjb2RlU3RyaW5nKHJ1bGUpLm1hcChwYXJ0ID0+IChpc051bWJlcihwYXJ0KVxuICAgICAgICAgID8gTnVtYmVyKHBhcnQpXG4gICAgICAgICAgOiBwYXJ0KSksIFt2YWx1ZV0pO1xuICAgICAgfSk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2lmLm1vZHVsZS52YWxpZGF0ZUlucHV0LnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * inflection\n * Copyright(c) 2011 Ben Lin <ben@dreamerslab.com>\n * MIT Licensed\n *\n * @fileoverview\n * A port of inflection-js to node.js module.\n */\n\n( function ( root, factory ){\n  if( true ){\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }else if( typeof exports === 'object' ){\n    module.exports = factory();\n  }else{\n    root.inflection = factory();\n  }\n}( this, function (){\n\n  /**\n   * @description This is a list of nouns that use the same form for both singular and plural.\n   *              This list should remain entirely in lower case to correctly match Strings.\n   * @private\n   */\n  var uncountable_words = [\n    // 'access',\n    'accommodation',\n    'adulthood',\n    'advertising',\n    'advice',\n    'aggression',\n    'aid',\n    'air',\n    'aircraft',\n    'alcohol',\n    'anger',\n    'applause',\n    'arithmetic',\n    // 'art',\n    'assistance',\n    'athletics',\n    // 'attention',\n\n    'bacon',\n    'baggage',\n    // 'ballet',\n    // 'beauty',\n    'beef',\n    // 'beer',\n    // 'behavior',\n    'biology',\n    // 'billiards',\n    'blood',\n    'botany',\n    // 'bowels',\n    'bread',\n    // 'business',\n    'butter',\n\n    'carbon',\n    'cardboard',\n    'cash',\n    'chalk',\n    'chaos',\n    'chess',\n    'crossroads',\n    'countryside',\n\n    // 'damage',\n    'dancing',\n    // 'danger',\n    'deer',\n    // 'delight',\n    // 'dessert',\n    'dignity',\n    'dirt',\n    // 'distribution',\n    'dust',\n\n    'economics',\n    'education',\n    'electricity',\n    // 'employment',\n    // 'energy',\n    'engineering',\n    'enjoyment',\n    // 'entertainment',\n    'envy',\n    'equipment',\n    'ethics',\n    'evidence',\n    'evolution',\n\n    // 'failure',\n    // 'faith',\n    'fame',\n    'fiction',\n    // 'fish',\n    'flour',\n    'flu',\n    'food',\n    // 'freedom',\n    // 'fruit',\n    'fuel',\n    'fun',\n    // 'funeral',\n    'furniture',\n\n    'gallows',\n    'garbage',\n    'garlic',\n    // 'gas',\n    'genetics',\n    // 'glass',\n    'gold',\n    'golf',\n    'gossip',\n    'grammar',\n    // 'grass',\n    'gratitude',\n    'grief',\n    // 'ground',\n    'guilt',\n    'gymnastics',\n\n    // 'hair',\n    'happiness',\n    'hardware',\n    'harm',\n    'hate',\n    'hatred',\n    'health',\n    'heat',\n    // 'height',\n    'help',\n    'homework',\n    'honesty',\n    'honey',\n    'hospitality',\n    'housework',\n    'humour',\n    'hunger',\n    'hydrogen',\n\n    'ice',\n    'importance',\n    'inflation',\n    'information',\n    // 'injustice',\n    'innocence',\n    // 'intelligence',\n    'iron',\n    'irony',\n\n    'jam',\n    // 'jealousy',\n    // 'jelly',\n    'jewelry',\n    // 'joy',\n    'judo',\n    // 'juice',\n    // 'justice',\n\n    'karate',\n    // 'kindness',\n    'knowledge',\n\n    // 'labour',\n    'lack',\n    // 'land',\n    'laughter',\n    'lava',\n    'leather',\n    'leisure',\n    'lightning',\n    'linguine',\n    'linguini',\n    'linguistics',\n    'literature',\n    'litter',\n    'livestock',\n    'logic',\n    'loneliness',\n    // 'love',\n    'luck',\n    'luggage',\n\n    'macaroni',\n    'machinery',\n    'magic',\n    // 'mail',\n    'management',\n    'mankind',\n    'marble',\n    'mathematics',\n    'mayonnaise',\n    'measles',\n    // 'meat',\n    // 'metal',\n    'methane',\n    'milk',\n    'minus',\n    'money',\n    // 'moose',\n    'mud',\n    'music',\n    'mumps',\n\n    'nature',\n    'news',\n    'nitrogen',\n    'nonsense',\n    'nurture',\n    'nutrition',\n\n    'obedience',\n    'obesity',\n    // 'oil',\n    'oxygen',\n\n    // 'paper',\n    // 'passion',\n    'pasta',\n    'patience',\n    // 'permission',\n    'physics',\n    'poetry',\n    'pollution',\n    'poverty',\n    // 'power',\n    'pride',\n    // 'production',\n    // 'progress',\n    // 'pronunciation',\n    'psychology',\n    'publicity',\n    'punctuation',\n\n    // 'quality',\n    // 'quantity',\n    'quartz',\n\n    'racism',\n    // 'rain',\n    // 'recreation',\n    'relaxation',\n    'reliability',\n    'research',\n    'respect',\n    'revenge',\n    'rice',\n    'rubbish',\n    'rum',\n\n    'safety',\n    // 'salad',\n    // 'salt',\n    // 'sand',\n    // 'satire',\n    'scenery',\n    'seafood',\n    'seaside',\n    'series',\n    'shame',\n    'sheep',\n    'shopping',\n    // 'silence',\n    'sleep',\n    // 'slang'\n    'smoke',\n    'smoking',\n    'snow',\n    'soap',\n    'software',\n    'soil',\n    // 'sorrow',\n    // 'soup',\n    'spaghetti',\n    // 'speed',\n    'species',\n    // 'spelling',\n    // 'sport',\n    'steam',\n    // 'strength',\n    'stuff',\n    'stupidity',\n    // 'success',\n    // 'sugar',\n    'sunshine',\n    'symmetry',\n\n    // 'tea',\n    'tennis',\n    'thirst',\n    'thunder',\n    'timber',\n    // 'time',\n    // 'toast',\n    // 'tolerance',\n    // 'trade',\n    'traffic',\n    'transportation',\n    // 'travel',\n    'trust',\n\n    // 'understanding',\n    'underwear',\n    'unemployment',\n    'unity',\n    // 'usage',\n\n    'validity',\n    'veal',\n    'vegetation',\n    'vegetarianism',\n    'vengeance',\n    'violence',\n    // 'vision',\n    'vitality',\n\n    'warmth',\n    // 'water',\n    'wealth',\n    'weather',\n    // 'weight',\n    'welfare',\n    'wheat',\n    // 'whiskey',\n    // 'width',\n    'wildlife',\n    // 'wine',\n    'wisdom',\n    // 'wood',\n    // 'wool',\n    // 'work',\n\n    // 'yeast',\n    'yoga',\n\n    'zinc',\n    'zoology'\n  ];\n\n  /**\n   * @description These rules translate from the singular form of a noun to its plural form.\n   * @private\n   */\n\n  var regex = {\n    plural : {\n      men       : new RegExp( '^(m|wom)en$'                    , 'gi' ),\n      people    : new RegExp( '(pe)ople$'                      , 'gi' ),\n      children  : new RegExp( '(child)ren$'                    , 'gi' ),\n      tia       : new RegExp( '([ti])a$'                       , 'gi' ),\n      analyses  : new RegExp( '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi' ),\n      hives     : new RegExp( '(hi|ti)ves$'                    , 'gi' ),\n      curves    : new RegExp( '(curve)s$'                      , 'gi' ),\n      lrves     : new RegExp( '([lr])ves$'                     , 'gi' ),\n      aves      : new RegExp( '([a])ves$'                      , 'gi' ),\n      foves     : new RegExp( '([^fo])ves$'                    , 'gi' ),\n      movies    : new RegExp( '(m)ovies$'                      , 'gi' ),\n      aeiouyies : new RegExp( '([^aeiouy]|qu)ies$'             , 'gi' ),\n      series    : new RegExp( '(s)eries$'                      , 'gi' ),\n      xes       : new RegExp( '(x|ch|ss|sh)es$'                , 'gi' ),\n      mice      : new RegExp( '([m|l])ice$'                    , 'gi' ),\n      buses     : new RegExp( '(bus)es$'                       , 'gi' ),\n      oes       : new RegExp( '(o)es$'                         , 'gi' ),\n      shoes     : new RegExp( '(shoe)s$'                       , 'gi' ),\n      crises    : new RegExp( '(cris|ax|test)es$'              , 'gi' ),\n      octopi    : new RegExp( '(octop|vir)i$'                  , 'gi' ),\n      aliases   : new RegExp( '(alias|canvas|status|campus)es$', 'gi' ),\n      summonses : new RegExp( '^(summons)es$'                  , 'gi' ),\n      oxen      : new RegExp( '^(ox)en'                        , 'gi' ),\n      matrices  : new RegExp( '(matr)ices$'                    , 'gi' ),\n      vertices  : new RegExp( '(vert|ind)ices$'                , 'gi' ),\n      feet      : new RegExp( '^feet$'                         , 'gi' ),\n      teeth     : new RegExp( '^teeth$'                        , 'gi' ),\n      geese     : new RegExp( '^geese$'                        , 'gi' ),\n      quizzes   : new RegExp( '(quiz)zes$'                     , 'gi' ),\n      whereases : new RegExp( '^(whereas)es$'                  , 'gi' ),\n      criteria  : new RegExp( '^(criteri)a$'                   , 'gi' ),\n      genera    : new RegExp( '^genera$'                       , 'gi' ),\n      ss        : new RegExp( 'ss$'                            , 'gi' ),\n      s         : new RegExp( 's$'                             , 'gi' )\n    },\n\n    singular : {\n      man       : new RegExp( '^(m|wom)an$'                  , 'gi' ),\n      person    : new RegExp( '(pe)rson$'                    , 'gi' ),\n      child     : new RegExp( '(child)$'                     , 'gi' ),\n      ox        : new RegExp( '^(ox)$'                       , 'gi' ),\n      axis      : new RegExp( '(ax|test)is$'                 , 'gi' ),\n      octopus   : new RegExp( '(octop|vir)us$'               , 'gi' ),\n      alias     : new RegExp( '(alias|status|canvas|campus)$', 'gi' ),\n      summons   : new RegExp( '^(summons)$'                  , 'gi' ),\n      bus       : new RegExp( '(bu)s$'                       , 'gi' ),\n      buffalo   : new RegExp( '(buffal|tomat|potat)o$'       , 'gi' ),\n      tium      : new RegExp( '([ti])um$'                    , 'gi' ),\n      sis       : new RegExp( 'sis$'                         , 'gi' ),\n      ffe       : new RegExp( '(?:([^f])fe|([lr])f)$'        , 'gi' ),\n      hive      : new RegExp( '(hi|ti)ve$'                   , 'gi' ),\n      aeiouyy   : new RegExp( '([^aeiouy]|qu)y$'             , 'gi' ),\n      x         : new RegExp( '(x|ch|ss|sh)$'                , 'gi' ),\n      matrix    : new RegExp( '(matr)ix$'                    , 'gi' ),\n      vertex    : new RegExp( '(vert|ind)ex$'                , 'gi' ),\n      mouse     : new RegExp( '([m|l])ouse$'                 , 'gi' ),\n      foot      : new RegExp( '^foot$'                       , 'gi' ),\n      tooth     : new RegExp( '^tooth$'                      , 'gi' ),\n      goose     : new RegExp( '^goose$'                      , 'gi' ),\n      quiz      : new RegExp( '(quiz)$'                      , 'gi' ),\n      whereas   : new RegExp( '^(whereas)$'                  , 'gi' ),\n      criterion : new RegExp( '^(criteri)on$'                , 'gi' ),\n      genus     : new RegExp( '^genus$'                      , 'gi' ),\n      s         : new RegExp( 's$'                           , 'gi' ),\n      common    : new RegExp( '$'                            , 'gi' )\n    }\n  };\n\n  var plural_rules = [\n\n    // do not replace if its already a plural word\n    [ regex.plural.men       ],\n    [ regex.plural.people    ],\n    [ regex.plural.children  ],\n    [ regex.plural.tia       ],\n    [ regex.plural.analyses  ],\n    [ regex.plural.hives     ],\n    [ regex.plural.curves    ],\n    [ regex.plural.lrves     ],\n    [ regex.plural.foves     ],\n    [ regex.plural.aeiouyies ],\n    [ regex.plural.series    ],\n    [ regex.plural.movies    ],\n    [ regex.plural.xes       ],\n    [ regex.plural.mice      ],\n    [ regex.plural.buses     ],\n    [ regex.plural.oes       ],\n    [ regex.plural.shoes     ],\n    [ regex.plural.crises    ],\n    [ regex.plural.octopi    ],\n    [ regex.plural.aliases   ],\n    [ regex.plural.summonses ],\n    [ regex.plural.oxen      ],\n    [ regex.plural.matrices  ],\n    [ regex.plural.feet      ],\n    [ regex.plural.teeth     ],\n    [ regex.plural.geese     ],\n    [ regex.plural.quizzes   ],\n    [ regex.plural.whereases ],\n    [ regex.plural.criteria  ],\n    [ regex.plural.genera    ],\n\n    // original rule\n    [ regex.singular.man      , '$1en' ],\n    [ regex.singular.person   , '$1ople' ],\n    [ regex.singular.child    , '$1ren' ],\n    [ regex.singular.ox       , '$1en' ],\n    [ regex.singular.axis     , '$1es' ],\n    [ regex.singular.octopus  , '$1i' ],\n    [ regex.singular.alias    , '$1es' ],\n    [ regex.singular.summons  , '$1es' ],\n    [ regex.singular.bus      , '$1ses' ],\n    [ regex.singular.buffalo  , '$1oes' ],\n    [ regex.singular.tium     , '$1a' ],\n    [ regex.singular.sis      , 'ses' ],\n    [ regex.singular.ffe      , '$1$2ves' ],\n    [ regex.singular.hive     , '$1ves' ],\n    [ regex.singular.aeiouyy  , '$1ies' ],\n    [ regex.singular.matrix   , '$1ices' ],\n    [ regex.singular.vertex   , '$1ices' ],\n    [ regex.singular.x        , '$1es' ],\n    [ regex.singular.mouse    , '$1ice' ],\n    [ regex.singular.foot     , 'feet' ],\n    [ regex.singular.tooth    , 'teeth' ],\n    [ regex.singular.goose    , 'geese' ],\n    [ regex.singular.quiz     , '$1zes' ],\n    [ regex.singular.whereas  , '$1es' ],\n    [ regex.singular.criterion, '$1a' ],\n    [ regex.singular.genus    , 'genera' ],\n\n    [ regex.singular.s     , 's' ],\n    [ regex.singular.common, 's' ]\n  ];\n\n  /**\n   * @description These rules translate from the plural form of a noun to its singular form.\n   * @private\n   */\n  var singular_rules = [\n\n    // do not replace if its already a singular word\n    [ regex.singular.man     ],\n    [ regex.singular.person  ],\n    [ regex.singular.child   ],\n    [ regex.singular.ox      ],\n    [ regex.singular.axis    ],\n    [ regex.singular.octopus ],\n    [ regex.singular.alias   ],\n    [ regex.singular.summons ],\n    [ regex.singular.bus     ],\n    [ regex.singular.buffalo ],\n    [ regex.singular.tium    ],\n    [ regex.singular.sis     ],\n    [ regex.singular.ffe     ],\n    [ regex.singular.hive    ],\n    [ regex.singular.aeiouyy ],\n    [ regex.singular.x       ],\n    [ regex.singular.matrix  ],\n    [ regex.singular.mouse   ],\n    [ regex.singular.foot    ],\n    [ regex.singular.tooth   ],\n    [ regex.singular.goose   ],\n    [ regex.singular.quiz    ],\n    [ regex.singular.whereas ],\n    [ regex.singular.criterion ],\n    [ regex.singular.genus ],\n\n    // original rule\n    [ regex.plural.men      , '$1an' ],\n    [ regex.plural.people   , '$1rson' ],\n    [ regex.plural.children , '$1' ],\n    [ regex.plural.genera   , 'genus'],\n    [ regex.plural.criteria , '$1on'],\n    [ regex.plural.tia      , '$1um' ],\n    [ regex.plural.analyses , '$1$2sis' ],\n    [ regex.plural.hives    , '$1ve' ],\n    [ regex.plural.curves   , '$1' ],\n    [ regex.plural.lrves    , '$1f' ],\n    [ regex.plural.aves     , '$1ve' ],\n    [ regex.plural.foves    , '$1fe' ],\n    [ regex.plural.movies   , '$1ovie' ],\n    [ regex.plural.aeiouyies, '$1y' ],\n    [ regex.plural.series   , '$1eries' ],\n    [ regex.plural.xes      , '$1' ],\n    [ regex.plural.mice     , '$1ouse' ],\n    [ regex.plural.buses    , '$1' ],\n    [ regex.plural.oes      , '$1' ],\n    [ regex.plural.shoes    , '$1' ],\n    [ regex.plural.crises   , '$1is' ],\n    [ regex.plural.octopi   , '$1us' ],\n    [ regex.plural.aliases  , '$1' ],\n    [ regex.plural.summonses, '$1' ],\n    [ regex.plural.oxen     , '$1' ],\n    [ regex.plural.matrices , '$1ix' ],\n    [ regex.plural.vertices , '$1ex' ],\n    [ regex.plural.feet     , 'foot' ],\n    [ regex.plural.teeth    , 'tooth' ],\n    [ regex.plural.geese    , 'goose' ],\n    [ regex.plural.quizzes  , '$1' ],\n    [ regex.plural.whereases, '$1' ],\n\n    [ regex.plural.ss, 'ss' ],\n    [ regex.plural.s , '' ]\n  ];\n\n  /**\n   * @description This is a list of words that should not be capitalized for title case.\n   * @private\n   */\n  var non_titlecased_words = [\n    'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at','by',\n    'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'\n  ];\n\n  /**\n   * @description These are regular expressions used for converting between String formats.\n   * @private\n   */\n  var id_suffix         = new RegExp( '(_ids|_id)$', 'g' );\n  var underbar          = new RegExp( '_', 'g' );\n  var space_or_underbar = new RegExp( '[\\ _]', 'g' );\n  var uppercase         = new RegExp( '([A-Z])', 'g' );\n  var underbar_prefix   = new RegExp( '^_' );\n\n  var inflector = {\n\n  /**\n   * A helper method that applies rules based replacement to a String.\n   * @private\n   * @function\n   * @param {String} str String to modify and return based on the passed rules.\n   * @param {Array: [RegExp, String]} rules Regexp to match paired with String to use for replacement\n   * @param {Array: [String]} skip Strings to skip if they match\n   * @param {String} override String to return as though this method succeeded (used to conform to APIs)\n   * @returns {String} Return passed String modified by passed rules.\n   * @example\n   *\n   *     this._apply_rules( 'cows', singular_rules ); // === 'cow'\n   */\n    _apply_rules : function ( str, rules, skip, override ){\n      if( override ){\n        str = override;\n      }else{\n        var ignore = ( inflector.indexOf( skip, str.toLowerCase()) > -1 );\n\n        if( !ignore ){\n          var i = 0;\n          var j = rules.length;\n\n          for( ; i < j; i++ ){\n            if( str.match( rules[ i ][ 0 ])){\n              if( rules[ i ][ 1 ] !== undefined ){\n                str = str.replace( rules[ i ][ 0 ], rules[ i ][ 1 ]);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      return str;\n    },\n\n\n\n  /**\n   * This lets us detect if an Array contains a given element.\n   * @public\n   * @function\n   * @param {Array} arr The subject array.\n   * @param {Object} item Object to locate in the Array.\n   * @param {Number} from_index Starts checking from this position in the Array.(optional)\n   * @param {Function} compare_func Function used to compare Array item vs passed item.(optional)\n   * @returns {Number} Return index position in the Array of the passed item.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.indexOf([ 'hi','there' ], 'guys' ); // === -1\n   *     inflection.indexOf([ 'hi','there' ], 'hi' ); // === 0\n   */\n    indexOf : function ( arr, item, from_index, compare_func ){\n      if( !from_index ){\n        from_index = -1;\n      }\n\n      var index = -1;\n      var i     = from_index;\n      var j     = arr.length;\n\n      for( ; i < j; i++ ){\n        if( arr[ i ]  === item || compare_func && compare_func( arr[ i ], item )){\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    },\n\n\n\n  /**\n   * This function adds pluralization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {String} plural Overrides normal output with said String.(optional)\n   * @returns {String} Singular English language nouns are returned in plural form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.pluralize( 'person' ); // === 'people'\n   *     inflection.pluralize( 'octopus' ); // === 'octopi'\n   *     inflection.pluralize( 'Hat' ); // === 'Hats'\n   *     inflection.pluralize( 'person', 'guys' ); // === 'guys'\n   */\n    pluralize : function ( str, plural ){\n      return inflector._apply_rules( str, plural_rules, uncountable_words, plural );\n    },\n\n\n\n  /**\n   * This function adds singularization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {String} singular Overrides normal output with said String.(optional)\n   * @returns {String} Plural English language nouns are returned in singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.singularize( 'people' ); // === 'person'\n   *     inflection.singularize( 'octopi' ); // === 'octopus'\n   *     inflection.singularize( 'Hats' ); // === 'Hat'\n   *     inflection.singularize( 'guys', 'person' ); // === 'person'\n   */\n    singularize : function ( str, singular ){\n      return inflector._apply_rules( str, singular_rules, uncountable_words, singular );\n    },\n\n\n  /**\n   * This function will pluralize or singularlize a String appropriately based on an integer value\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Number} count The number to base pluralization off of.\n   * @param {String} singular Overrides normal output with said String.(optional)\n   * @param {String} plural Overrides normal output with said String.(optional)\n   * @returns {String} English language nouns are returned in the plural or singular form based on the count.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.inflect( 'people' 1 ); // === 'person'\n   *     inflection.inflect( 'octopi' 1 ); // === 'octopus'\n   *     inflection.inflect( 'Hats' 1 ); // === 'Hat'\n   *     inflection.inflect( 'guys', 1 , 'person' ); // === 'person'\n   *     inflection.inflect( 'person', 2 ); // === 'people'\n   *     inflection.inflect( 'octopus', 2 ); // === 'octopi'\n   *     inflection.inflect( 'Hat', 2 ); // === 'Hats'\n   *     inflection.inflect( 'person', 2, null, 'guys' ); // === 'guys'\n   */\n    inflect : function ( str, count, singular, plural ){\n      count = parseInt( count, 10 );\n\n      if( isNaN( count )) return str;\n\n      if( count === 0 || count > 1 ){\n        return inflector._apply_rules( str, plural_rules, uncountable_words, plural );\n      }else{\n        return inflector._apply_rules( str, singular_rules, uncountable_words, singular );\n      }\n    },\n\n\n\n  /**\n   * This function adds camelization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)\n   *                                 Passing true will lowercase it.\n   * @returns {String} Lower case underscored words will be returned in camel case.\n   *                  additionally '/' is translated to '::'\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.camelize( 'message_properties' ); // === 'MessageProperties'\n   *     inflection.camelize( 'message_properties', true ); // === 'messageProperties'\n   */\n    camelize : function ( str, low_first_letter ){\n      var str_path = str.split( '/' );\n      var i        = 0;\n      var j        = str_path.length;\n      var str_arr, init_x, k, l, first;\n\n      for( ; i < j; i++ ){\n        str_arr = str_path[ i ].split( '_' );\n        k       = 0;\n        l       = str_arr.length;\n\n        for( ; k < l; k++ ){\n          if( k !== 0 ){\n            str_arr[ k ] = str_arr[ k ].toLowerCase();\n          }\n\n          first = str_arr[ k ].charAt( 0 );\n          first = low_first_letter && i === 0 && k === 0\n            ? first.toLowerCase() : first.toUpperCase();\n          str_arr[ k ] = first + str_arr[ k ].substring( 1 );\n        }\n\n        str_path[ i ] = str_arr.join( '' );\n      }\n\n      return str_path.join( '::' );\n    },\n\n\n\n  /**\n   * This function adds underscore support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} all_upper_case Default is to lowercase and add underscore prefix.(optional)\n   *                  Passing true will return as entered.\n   * @returns {String} Camel cased words are returned as lower cased and underscored.\n   *                  additionally '::' is translated to '/'.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.underscore( 'MessageProperties' ); // === 'message_properties'\n   *     inflection.underscore( 'messageProperties' ); // === 'message_properties'\n   *     inflection.underscore( 'MP', true ); // === 'MP'\n   */\n    underscore : function ( str, all_upper_case ){\n      if( all_upper_case && str === str.toUpperCase()) return str;\n\n      var str_path = str.split( '::' );\n      var i        = 0;\n      var j        = str_path.length;\n\n      for( ; i < j; i++ ){\n        str_path[ i ] = str_path[ i ].replace( uppercase, '_$1' );\n        str_path[ i ] = str_path[ i ].replace( underbar_prefix, '' );\n      }\n\n      return str_path.join( '/' ).toLowerCase();\n    },\n\n\n\n  /**\n   * This function adds humanize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)\n   *                                 Passing true will lowercase it.\n   * @returns {String} Lower case underscored words will be returned in humanized form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.humanize( 'message_properties' ); // === 'Message properties'\n   *     inflection.humanize( 'message_properties', true ); // === 'message properties'\n   */\n    humanize : function ( str, low_first_letter ){\n      str = str.toLowerCase();\n      str = str.replace( id_suffix, '' );\n      str = str.replace( underbar, ' ' );\n\n      if( !low_first_letter ){\n        str = inflector.capitalize( str );\n      }\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds capitalization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} All characters will be lower case and the first will be upper.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.capitalize( 'message_properties' ); // === 'Message_properties'\n   *     inflection.capitalize( 'message properties', true ); // === 'Message properties'\n   */\n    capitalize : function ( str ){\n      str = str.toLowerCase();\n\n      return str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );\n    },\n\n\n\n  /**\n   * This function replaces underscores with dashes in the string.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Replaces all spaces or underscores with dashes.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.dasherize( 'message_properties' ); // === 'message-properties'\n   *     inflection.dasherize( 'Message Properties' ); // === 'Message-Properties'\n   */\n    dasherize : function ( str ){\n      return str.replace( space_or_underbar, '-' );\n    },\n\n\n\n  /**\n   * This function adds titleize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Capitalizes words as you would for a book title.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.titleize( 'message_properties' ); // === 'Message Properties'\n   *     inflection.titleize( 'message properties to keep' ); // === 'Message Properties to Keep'\n   */\n    titleize : function ( str ){\n      str         = str.toLowerCase().replace( underbar, ' ' );\n      var str_arr = str.split( ' ' );\n      var i       = 0;\n      var j       = str_arr.length;\n      var d, k, l;\n\n      for( ; i < j; i++ ){\n        d = str_arr[ i ].split( '-' );\n        k = 0;\n        l = d.length;\n\n        for( ; k < l; k++){\n          if( inflector.indexOf( non_titlecased_words, d[ k ].toLowerCase()) < 0 ){\n            d[ k ] = inflector.capitalize( d[ k ]);\n          }\n        }\n\n        str_arr[ i ] = d.join( '-' );\n      }\n\n      str = str_arr.join( ' ' );\n      str = str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds demodulize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Removes module names leaving only class names.(Ruby style)\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.demodulize( 'Message::Bus::Properties' ); // === 'Properties'\n   */\n    demodulize : function ( str ){\n      var str_arr = str.split( '::' );\n\n      return str_arr[ str_arr.length - 1 ];\n    },\n\n\n\n  /**\n   * This function adds tableize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Return camel cased words into their underscored plural form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.tableize( 'MessageBusProperty' ); // === 'message_bus_properties'\n   */\n    tableize : function ( str ){\n      str = inflector.underscore( str );\n      str = inflector.pluralize( str );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds classification support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Underscored plural nouns become the camel cased singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.classify( 'message_bus_properties' ); // === 'MessageBusProperty'\n   */\n    classify : function ( str ){\n      str = inflector.camelize( str );\n      str = inflector.singularize( str );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds foreign key support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} drop_id_ubar Default is to seperate id with an underbar at the end of the class name,\n                                 you can pass true to skip it.(optional)\n   * @returns {String} Underscored plural nouns become the camel cased singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.foreign_key( 'MessageBusProperty' ); // === 'message_bus_property_id'\n   *     inflection.foreign_key( 'MessageBusProperty', true ); // === 'message_bus_propertyid'\n   */\n    foreign_key : function ( str, drop_id_ubar ){\n      str = inflector.demodulize( str );\n      str = inflector.underscore( str ) + (( drop_id_ubar ) ? ( '' ) : ( '_' )) + 'id';\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds ordinalize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Return all found numbers their sequence like '22nd'.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.ordinalize( 'the 1 pitch' ); // === 'the 1st pitch'\n   */\n    ordinalize : function ( str ){\n      var str_arr = str.split( ' ' );\n      var i       = 0;\n      var j       = str_arr.length;\n\n      for( ; i < j; i++ ){\n        var k = parseInt( str_arr[ i ], 10 );\n\n        if( !isNaN( k )){\n          var ltd = str_arr[ i ].substring( str_arr[ i ].length - 2 );\n          var ld  = str_arr[ i ].substring( str_arr[ i ].length - 1 );\n          var suf = 'th';\n\n          if( ltd != '11' && ltd != '12' && ltd != '13' ){\n            if( ld === '1' ){\n              suf = 'st';\n            }else if( ld === '2' ){\n              suf = 'nd';\n            }else if( ld === '3' ){\n              suf = 'rd';\n            }\n          }\n\n          str_arr[ i ] += suf;\n        }\n      }\n\n      return str_arr.join( ' ' );\n    },\n\n  /**\n   * This function performs multiple inflection methods on a string\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Array} arr An array of inflection methods.\n   * @returns {String}\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.transform( 'all job', [ 'pluralize', 'capitalize', 'dasherize' ]); // === 'All-jobs'\n   */\n    transform : function ( str, arr ){\n      var i = 0;\n      var j = arr.length;\n\n      for( ;i < j; i++ ){\n        var method = arr[ i ];\n\n        if( inflector.hasOwnProperty( method )){\n          str = inflector[ method ]( str );\n        }\n      }\n\n      return str;\n    }\n  };\n\n/**\n * @public\n */\n  inflector.version = '1.12.0';\n\n  return inflector;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @fileOverview The `validateForm` module.\r\n *\r\n * @author Justin Toon\r\n * @since 0.1.0\r\n *\r\n * @requires NPM:lodash\r\n */\r\nvar _ = __webpack_require__(0);\r\n/**\r\n * A module for validating a form for completeness and optionally\r\n * setting a hidden field with the validation status.\r\n */\r\n/**\r\n * Validate a form.\r\n *\r\n * @since 0.1.0\r\n *\r\n * @param {HTMLInputElement} [statusField] An optional field to set a value on.\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction validateForm(statusField) {\r\n    var fields = []\r\n        .forEach\r\n        .call(this.querySelectorAll('input, select, textarea'))\r\n        .filter(function (field) {\r\n        return field.required && field.required === true;\r\n    });\r\n    var formIsValid = fields.reduce(function (isValid, field) {\r\n        if (!isValid)\r\n            return false; // if already found to be invalid, leave it that way\r\n        return !_.isEmpty(field.value && field.value);\r\n    }, true);\r\n    if (statusField) {\r\n        statusField.value = formIsValid.toString();\r\n    }\r\n    return formIsValid;\r\n}\r\nexports.default = validateForm;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9pZi5tb2R1bGUudmFsaWRhdGVGb3JtLnRzP2NmNDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7Ozs7OztHQU9HO0FBRUgsK0JBQTRCO0FBRTVCOzs7R0FHRztBQUVIOzs7Ozs7OztHQVFHO0FBQ0gsc0JBQXFDLFdBQThCO0lBQ2pFLElBQU0sTUFBTSxHQUFHLEVBQUU7U0FDZCxPQUFPO1NBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1NBQ3RELE1BQU0sQ0FBQyxVQUFDLEtBQWlCO1FBQ3hCLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDO0lBQ25ELENBQUMsQ0FBQyxDQUFDO0lBRUwsSUFBTSxXQUFXLEdBQVksTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFDLE9BQWlCLEVBQUUsS0FBaUI7UUFDOUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFDWCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsb0RBQW9EO1FBQ3BFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBRVQsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUNoQixXQUFXLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0lBRUQsTUFBTSxDQUFDLFdBQVcsQ0FBQztBQUNyQixDQUFDO0FBbkJELCtCQW1CQyIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInR5cGUgRm9ybUZpZWxkID0gSFRNTElucHV0RWxlbWVudCB8IEhUTUxTZWxlY3RFbGVtZW50IHwgSFRNTFRleHRBcmVhRWxlbWVudDtcblxuLyoqXG4gKiBAZmlsZU92ZXJ2aWV3IFRoZSBgdmFsaWRhdGVGb3JtYCBtb2R1bGUuXG4gKlxuICogQGF1dGhvciBKdXN0aW4gVG9vblxuICogQHNpbmNlIDAuMS4wXG4gKlxuICogQHJlcXVpcmVzIE5QTTpsb2Rhc2hcbiAqL1xuXG5pbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5cbi8qKlxuICogQSBtb2R1bGUgZm9yIHZhbGlkYXRpbmcgYSBmb3JtIGZvciBjb21wbGV0ZW5lc3MgYW5kIG9wdGlvbmFsbHlcbiAqIHNldHRpbmcgYSBoaWRkZW4gZmllbGQgd2l0aCB0aGUgdmFsaWRhdGlvbiBzdGF0dXMuXG4gKi9cblxuLyoqXG4gKiBWYWxpZGF0ZSBhIGZvcm0uXG4gKlxuICogQHNpbmNlIDAuMS4wXG4gKlxuICogQHBhcmFtIHtIVE1MSW5wdXRFbGVtZW50fSBbc3RhdHVzRmllbGRdIEFuIG9wdGlvbmFsIGZpZWxkIHRvIHNldCBhIHZhbHVlIG9uLlxuICpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2YWxpZGF0ZUZvcm0oc3RhdHVzRmllbGQ/OiBIVE1MSW5wdXRFbGVtZW50KSA6IGJvb2xlYW4ge1xuICBjb25zdCBmaWVsZHMgPSBbXVxuICAgIC5mb3JFYWNoXG4gICAgLmNhbGwodGhpcy5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYScpKVxuICAgIC5maWx0ZXIoKGZpZWxkIDogRm9ybUZpZWxkKSA9PiB7XG4gICAgICByZXR1cm4gZmllbGQucmVxdWlyZWQgJiYgZmllbGQucmVxdWlyZWQgPT09IHRydWU7XG4gICAgfSk7XG5cbiAgY29uc3QgZm9ybUlzVmFsaWQ6IGJvb2xlYW4gPSBmaWVsZHMucmVkdWNlKChpc1ZhbGlkIDogYm9vbGVhbiwgZmllbGQgOiBGb3JtRmllbGQpID0+IHtcbiAgICBpZiAoIWlzVmFsaWQpXG4gICAgICByZXR1cm4gZmFsc2U7IC8vIGlmIGFscmVhZHkgZm91bmQgdG8gYmUgaW52YWxpZCwgbGVhdmUgaXQgdGhhdCB3YXlcbiAgICByZXR1cm4gIV8uaXNFbXB0eShmaWVsZC52YWx1ZSAmJiBmaWVsZC52YWx1ZSk7XG4gIH0sIHRydWUpO1xuXG4gIGlmIChzdGF0dXNGaWVsZCkge1xuICAgIHN0YXR1c0ZpZWxkLnZhbHVlID0gZm9ybUlzVmFsaWQudG9TdHJpbmcoKTtcbiAgfVxuXG4gIHJldHVybiBmb3JtSXNWYWxpZDtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2lmLm1vZHVsZS52YWxpZGF0ZUZvcm0udHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The controller for the `validateInput` module.\r\n *\r\n * @author Justin Toon\r\n * @license MIT\r\n *\r\n * @requires ../config/if.controller.js:controller\r\n * @requires ../modules/if.module.validateInput.js:validateInput\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_controller_1 = __webpack_require__(1);\r\n/**\r\n * The initialization function for creating the `validateForm` {@link Controller}.\r\n *\r\n * @returns {Controller}\r\n */\r\nfunction validateInput() {\r\n    /**\r\n     * The name of the controller.\r\n     *\r\n     * @const\r\n     * @type {string}\r\n     */\r\n    var name = 'validateInput';\r\n    /**\r\n     * Selector strings for the `validateInput` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var targets = if_controller_1.default.getTargets(name);\r\n    /**\r\n     * Events created for the `validateInput` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var events = {};\r\n    return new if_controller_1.default({\r\n        name: name,\r\n        targets: targets,\r\n        events: events\r\n    });\r\n}\r\nexports.default = validateInput;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvaWYuY29udHJvbGxlci52YWxpZGF0ZUlucHV0LnRzPzRlYjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7OztHQVFHOztBQUVILDZDQUFpRDtBQUdqRDs7OztHQUlHO0FBQ0g7SUFDRTs7Ozs7T0FLRztJQUNILElBQU0sSUFBSSxHQUFHLGVBQWUsQ0FBQztJQUU3Qjs7Ozs7T0FLRztJQUNILElBQU0sT0FBTyxHQUFtQix1QkFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUU1RDs7Ozs7T0FLRztJQUNILElBQU0sTUFBTSxHQUFpQixFQUFFLENBQUM7SUFFaEMsTUFBTSxDQUFDLElBQUksdUJBQVUsQ0FBQztRQUNwQixJQUFJO1FBQ0osT0FBTztRQUNQLE1BQU07S0FDUCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBOUJELGdDQThCQyIsImZpbGUiOiIxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgVGhlIGNvbnRyb2xsZXIgZm9yIHRoZSBgdmFsaWRhdGVJbnB1dGAgbW9kdWxlLlxuICpcbiAqIEBhdXRob3IgSnVzdGluIFRvb25cbiAqIEBsaWNlbnNlIE1JVFxuICpcbiAqIEByZXF1aXJlcyAuLi9jb25maWcvaWYuY29udHJvbGxlci5qczpjb250cm9sbGVyXG4gKiBAcmVxdWlyZXMgLi4vbW9kdWxlcy9pZi5tb2R1bGUudmFsaWRhdGVJbnB1dC5qczp2YWxpZGF0ZUlucHV0XG4gKi9cblxuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSAnLi4vY29uZmlnL2lmLmNvbnRyb2xsZXInO1xuaW1wb3J0IHsgdmFsaWRhdGVJbnB1dCBhcyB2YWxpZGF0ZUlucHV0TW9kdWxlIH0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbi8qKlxuICogVGhlIGluaXRpYWxpemF0aW9uIGZ1bmN0aW9uIGZvciBjcmVhdGluZyB0aGUgYHZhbGlkYXRlRm9ybWAge0BsaW5rIENvbnRyb2xsZXJ9LlxuICpcbiAqIEByZXR1cm5zIHtDb250cm9sbGVyfVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2YWxpZGF0ZUlucHV0KCkge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGNvbnRyb2xsZXIuXG4gICAqXG4gICAqIEBjb25zdFxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgY29uc3QgbmFtZSA9ICd2YWxpZGF0ZUlucHV0JztcblxuICAvKipcbiAgICogU2VsZWN0b3Igc3RyaW5ncyBmb3IgdGhlIGB2YWxpZGF0ZUlucHV0YCB7QGxpbmsgQ29udHJvbGxlcn0uXG4gICAqXG4gICAqIEBjb25zdFxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cbiAgY29uc3QgdGFyZ2V0czogTm9kZUxpc3RPYmplY3QgPSBDb250cm9sbGVyLmdldFRhcmdldHMobmFtZSk7XG5cbiAgLyoqXG4gICAqIEV2ZW50cyBjcmVhdGVkIGZvciB0aGUgYHZhbGlkYXRlSW5wdXRgIHtAbGluayBDb250cm9sbGVyfS5cbiAgICpcbiAgICogQGNvbnN0XG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqL1xuICBjb25zdCBldmVudHM6IE1ldGhvZE9iamVjdCA9IHt9O1xuXG4gIHJldHVybiBuZXcgQ29udHJvbGxlcih7XG4gICAgbmFtZSxcbiAgICB0YXJnZXRzLFxuICAgIGV2ZW50c1xuICB9KTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb250cm9sbGVycy9pZi5jb250cm9sbGVyLnZhbGlkYXRlSW5wdXQudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * @file The controller for the `validateForm` module.\r\n *\r\n * @author Justin Toon\r\n * @license MIT\r\n *\r\n * @requires ../config/if.controller.js:controller\r\n * @requires ../modules/if.module.validateInput.js:validateInputModule\r\n * @requires ../if.utils.js:findParentTag\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar if_controller_1 = __webpack_require__(1);\r\nvar if_utils_1 = __webpack_require__(3);\r\n/**\r\n * The initialization function for creating the `validateForm` {@link Controller}.\r\n *\r\n * @returns {Controller}\r\n */\r\nfunction validateForm() {\r\n    /**\r\n     * The name of the controller.\r\n     *\r\n     * @const\r\n     * @type {string}\r\n     */\r\n    var name = 'validateForm';\r\n    /**\r\n     * Selector strings for the `validateForm` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var targets = if_controller_1.default.getTargets(name);\r\n    /**\r\n     * Events created for the `validateForm` {@link Controller}.\r\n     *\r\n     * @const\r\n     * @type {Object}\r\n     */\r\n    var events = {\r\n        formChange: function eventFormChange() {\r\n            var parentForm;\r\n            window.addEventListener('load', methods.init.bind(parentForm));\r\n            []\r\n                .forEach\r\n                .call(targets.fields)\r\n                .forEach(function (field) {\r\n                // TODO: this _should_ cache the parent form lookup but need to verify\r\n                parentForm = parentForm || if_utils_1.findParentTag(field, 'form') || null;\r\n                if (parentForm) {\r\n                    field.addEventListener('change', methods.init.bind(parentForm));\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Methods used by the `validateForm` `Controller`.\r\n     *\r\n     * @module validateForm/methods\r\n     */\r\n    var methods = {\r\n        /**\r\n           * Initialize the form validation.\r\n           *\r\n           * @param {Event} event The event data from `eventFormChange`\r\n           */\r\n        init: function methodsValidateFormInit(event) {\r\n            var form = this;\r\n            if (form) {\r\n                if (form.hasAttribute('novalidate')) {\r\n                    form.setAttribute('novalidate', '');\r\n                }\r\n                // const statusField : Node | undefined = targets\r\n                //   .status\r\n                //   .item(0);\r\n            }\r\n        }\r\n    };\r\n    return new if_controller_1.default({ name: name, targets: targets, events: events });\r\n}\r\nexports.default = validateForm;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvaWYuY29udHJvbGxlci52YWxpZGF0ZUZvcm0udHM/YTIwMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7OztHQVNHOztBQUVILDZDQUFpRDtBQUVqRCx3Q0FBMEM7QUFFMUM7Ozs7R0FJRztBQUNIO0lBQ0U7Ozs7O09BS0c7SUFDSCxJQUFNLElBQUksR0FBRyxjQUFjLENBQUM7SUFFNUI7Ozs7O09BS0c7SUFDSCxJQUFNLE9BQU8sR0FBbUIsdUJBQVUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFNUQ7Ozs7O09BS0c7SUFDSCxJQUFNLE1BQU0sR0FBaUI7UUFDM0IsVUFBVSxFQUFFO1lBQ1YsSUFBSSxVQUErQixDQUFDO1lBRXBDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUUvRCxFQUFFO2lCQUNDLE9BQU87aUJBQ1AsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7aUJBQ3BCLE9BQU8sQ0FBQyxVQUFDLEtBQW1CO2dCQUMzQixzRUFBc0U7Z0JBQ3RFLFVBQVUsR0FBRyxVQUFVLElBQUksd0JBQWEsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDO2dCQUVoRSxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO29CQUNmLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDbEUsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztLQUNGLENBQUM7SUFFRjs7OztPQUlHO0lBQ0gsSUFBTSxPQUFPLEdBQWlCO1FBQzVCOzs7O2FBSUs7UUFDTCxJQUFJLEVBQUUsaUNBQWlDLEtBQWE7WUFDbEQsSUFBTSxJQUFJLEdBQXFCLElBQUksQ0FBQztZQUVwQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUNULEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDdEMsQ0FBQztnQkFFRCxpREFBaUQ7Z0JBQ2pELFlBQVk7Z0JBQ1osY0FBYztZQUNoQixDQUFDO1FBQ0gsQ0FBQztLQUNGO0lBRUQsTUFBTSxDQUFDLElBQUksdUJBQVUsQ0FBQyxFQUFDLElBQUksUUFBRSxPQUFPLFdBQUUsTUFBTSxVQUFDLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBdEVELCtCQXNFQyIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgVGhlIGNvbnRyb2xsZXIgZm9yIHRoZSBgdmFsaWRhdGVGb3JtYCBtb2R1bGUuXG4gKlxuICogQGF1dGhvciBKdXN0aW4gVG9vblxuICogQGxpY2Vuc2UgTUlUXG4gKlxuICogQHJlcXVpcmVzIC4uL2NvbmZpZy9pZi5jb250cm9sbGVyLmpzOmNvbnRyb2xsZXJcbiAqIEByZXF1aXJlcyAuLi9tb2R1bGVzL2lmLm1vZHVsZS52YWxpZGF0ZUlucHV0LmpzOnZhbGlkYXRlSW5wdXRNb2R1bGVcbiAqIEByZXF1aXJlcyAuLi9pZi51dGlscy5qczpmaW5kUGFyZW50VGFnXG4gKi9cblxuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSAnLi4vY29uZmlnL2lmLmNvbnRyb2xsZXInO1xuaW1wb3J0IHt2YWxpZGF0ZUZvcm0gYXMgdmFsaWRhdGVGb3JtTW9kdWxlfSBmcm9tICcuLi9tb2R1bGVzJztcbmltcG9ydCB7ZmluZFBhcmVudFRhZ30gZnJvbSAnLi4vaWYudXRpbHMnO1xuXG4vKipcbiAqIFRoZSBpbml0aWFsaXphdGlvbiBmdW5jdGlvbiBmb3IgY3JlYXRpbmcgdGhlIGB2YWxpZGF0ZUZvcm1gIHtAbGluayBDb250cm9sbGVyfS5cbiAqXG4gKiBAcmV0dXJucyB7Q29udHJvbGxlcn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmFsaWRhdGVGb3JtKCkgOiBDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBjb250cm9sbGVyLlxuICAgKlxuICAgKiBAY29uc3RcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIGNvbnN0IG5hbWUgPSAndmFsaWRhdGVGb3JtJztcblxuICAvKipcbiAgICogU2VsZWN0b3Igc3RyaW5ncyBmb3IgdGhlIGB2YWxpZGF0ZUZvcm1gIHtAbGluayBDb250cm9sbGVyfS5cbiAgICpcbiAgICogQGNvbnN0XG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqL1xuICBjb25zdCB0YXJnZXRzOiBOb2RlTGlzdE9iamVjdCA9IENvbnRyb2xsZXIuZ2V0VGFyZ2V0cyhuYW1lKTtcblxuICAvKipcbiAgICogRXZlbnRzIGNyZWF0ZWQgZm9yIHRoZSBgdmFsaWRhdGVGb3JtYCB7QGxpbmsgQ29udHJvbGxlcn0uXG4gICAqXG4gICAqIEBjb25zdFxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cbiAgY29uc3QgZXZlbnRzOiBNZXRob2RPYmplY3QgPSB7XG4gICAgZm9ybUNoYW5nZTogZnVuY3Rpb24gZXZlbnRGb3JtQ2hhbmdlKCkge1xuICAgICAgbGV0IHBhcmVudEZvcm0gOiBIVE1MRWxlbWVudCB8IG51bGw7XG5cbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgbWV0aG9kcy5pbml0LmJpbmQocGFyZW50Rm9ybSkpO1xuXG4gICAgICBbXVxuICAgICAgICAuZm9yRWFjaFxuICAgICAgICAuY2FsbCh0YXJnZXRzLmZpZWxkcylcbiAgICAgICAgLmZvckVhY2goKGZpZWxkIDogSFRNTEVsZW1lbnQpID0+IHtcbiAgICAgICAgICAvLyBUT0RPOiB0aGlzIF9zaG91bGRfIGNhY2hlIHRoZSBwYXJlbnQgZm9ybSBsb29rdXAgYnV0IG5lZWQgdG8gdmVyaWZ5XG4gICAgICAgICAgcGFyZW50Rm9ybSA9IHBhcmVudEZvcm0gfHwgZmluZFBhcmVudFRhZyhmaWVsZCwgJ2Zvcm0nKSB8fCBudWxsO1xuXG4gICAgICAgICAgaWYgKHBhcmVudEZvcm0pIHtcbiAgICAgICAgICAgIGZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIG1ldGhvZHMuaW5pdC5iaW5kKHBhcmVudEZvcm0pKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogTWV0aG9kcyB1c2VkIGJ5IHRoZSBgdmFsaWRhdGVGb3JtYCBgQ29udHJvbGxlcmAuXG4gICAqXG4gICAqIEBtb2R1bGUgdmFsaWRhdGVGb3JtL21ldGhvZHNcbiAgICovXG4gIGNvbnN0IG1ldGhvZHM6IE1ldGhvZE9iamVjdCA9IHtcbiAgICAvKipcbiAgICAgICAqIEluaXRpYWxpemUgdGhlIGZvcm0gdmFsaWRhdGlvbi5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge0V2ZW50fSBldmVudCBUaGUgZXZlbnQgZGF0YSBmcm9tIGBldmVudEZvcm1DaGFuZ2VgXG4gICAgICAgKi9cbiAgICBpbml0OiBmdW5jdGlvbiBtZXRob2RzVmFsaWRhdGVGb3JtSW5pdChldmVudCA6IEV2ZW50KSB7XG4gICAgICBjb25zdCBmb3JtIDogSFRNTEZvcm1FbGVtZW50ID0gdGhpcztcblxuICAgICAgaWYgKGZvcm0pIHtcbiAgICAgICAgaWYgKGZvcm0uaGFzQXR0cmlidXRlKCdub3ZhbGlkYXRlJykpIHtcbiAgICAgICAgICBmb3JtLnNldEF0dHJpYnV0ZSgnbm92YWxpZGF0ZScsICcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNvbnN0IHN0YXR1c0ZpZWxkIDogTm9kZSB8IHVuZGVmaW5lZCA9IHRhcmdldHNcbiAgICAgICAgLy8gICAuc3RhdHVzXG4gICAgICAgIC8vICAgLml0ZW0oMCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBDb250cm9sbGVyKHtuYW1lLCB0YXJnZXRzLCBldmVudHN9KTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb250cm9sbGVycy9pZi5jb250cm9sbGVyLnZhbGlkYXRlRm9ybS50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n");

/***/ })
/******/ ]);